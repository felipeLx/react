{"version":3,"sources":["auth-provider.js","utils/api-client.js","context/auth-context.js","components/lib.js","utils/books.js","assets/book-placeholder.svg","utils/hooks.js","test/server/index.js","test/data/books.js","test/data/users.js","test/data/list-items.js","test/server/server-handlers.js","test/server/dev-server.js","app.js","context/index.js","index.js"],"names":["localStorageKey","getToken","a","window","localStorage","getItem","handleUserResponse","user","setItem","token","logout","removeItem","authURL","process","client","endpoint","data","config","method","body","JSON","stringify","headers","fetch","then","response","json","ok","Promise","reject","apiURL","customHeaders","customConfig","undefined","Authorization","status","queryCache","clear","auth","location","assign","message","setQueryData","listItems","staleTime","listItem","setQueryDataForBook","book","AuthContext","React","AuthProvider","props","useAsync","error","isLoading","isIdle","isError","isSuccess","run","setData","appDataPromise","bootstrapAppData","login","form","username","password","register","value","Provider","Error","useAuth","context","useClient","displayName","CircleButton","className","BookListUL","Spinner","Button","inputStyles","Input","Textarea","Dialog","FormGroup","FullPageSpinner","Link","errorMessageVariants","stacked","inline","ErrorMessage","variant","role","FullPageErrorFallback","loadingBook","title","author","coverImageUrl","publisher","synopsis","loadingBooks","Array","from","length","v","index","id","bookQueryConfig","cacheTime","getBookSearchConfig","query","queryKey","queryFn","encodeURIComponent","books","onSuccess","bookId","useBookSearch","result","useQuery","useBook","useRefetchBookSearchQuery","removeQueries","prefetchQuery","refetchBookSearchQuery","defaultInitialState","initialState","initialStateRef","s","current","safeSetState","useSafeDispatch","dispatch","mounted","setError","reset","promise","module","exports","require","booksData","read","find","readManyNotInList","ids","filter","includes","search","matchSorter","keys","threshold","rankings","CONTAINS","key","usersKey","users","persist","load","Object","parse","validateUserForm","authenticate","hash","passwordHash","sanitizeUser","btoa","create","validateUser","str","i","charCodeAt","String","__bookshelf","purgeUsers","forEach","sleep","listItemsKey","authorize","userId","listItemId","ownerId","required","rating","notes","startDate","Date","now","finishDate","booksDB","validateListItem","update","updates","remove","readByOwner","values","li","ls","defaultVal","val","lsVal","Number","isFinite","purgeListItems","CI","resolve","t","Math","random","setTimeout","apiUrl","authUrl","handlers","rest","post","req","res","ctx","usersDB","userFields","get","getUser","listItemsDB","lis","all","map","listItemsAndBooks","url","searchParams","has","matchingBooks","getBooksNotInUsersList","allBooks","slice","params","put","updatedListItem","success","handler","originalResolver","resolver","shouldFail","toString","failureRate","requestMatchesFailConfig","configMatches","requestMethod","urlMatch","match","pathname","matches","some","replace","atob","bookIdsInUsersList","fullUrl","URL","server","setupWorker","start","quiet","serviceWorker","AuthenticatedApp","UnauthenticatedApp","App","fallback","queryConfig","queries","useErrorBoundary","refetchOnWindowFocus","retry","failureCount","AppProviders","children","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8654972.chunk.js","sourcesContent":["// pretend this is firebase, netlify, or auth0's code.\n// you shouldn't have to implement something like this in your own app\n\nconst localStorageKey = '__auth_provider_token__'\n\nasync function getToken() {\n  // if we were a real auth provider, this is where we would make a request\n  // to retrieve the user's token. (It's a bit more complicated than that...\n  // but you're probably not an auth provider so you don't need to worry about it).\n  return window.localStorage.getItem(localStorageKey)\n}\n\nfunction handleUserResponse({user}) {\n  window.localStorage.setItem(localStorageKey, user.token)\n  return user\n}\n\nfunction login({username, password}) {\n  return client('login', {username, password}).then(handleUserResponse)\n}\n\nfunction register({username, password}) {\n  return client('register', {username, password}).then(handleUserResponse)\n}\n\nasync function logout() {\n  window.localStorage.removeItem(localStorageKey)\n}\n\n// an auth provider wouldn't use your client, they'd have their own\n// so that's why we're not just re-using the client\nconst authURL = process.env.REACT_APP_AUTH_URL\n\nasync function client(endpoint, data) {\n  const config = {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {'Content-Type': 'application/json'},\n  }\n\n  return window.fetch(`${authURL}/${endpoint}`, config).then(async response => {\n    const data = await response.json()\n    if (response.ok) {\n      return data\n    } else {\n      return Promise.reject(data)\n    }\n  })\n}\n\nexport {getToken, login, register, logout, localStorageKey}\n","import {queryCache} from 'react-query'\nimport * as auth from 'auth-provider'\nconst apiURL = process.env.REACT_APP_API_URL\n\nasync function client(\n  endpoint,\n  {data, token, headers: customHeaders, ...customConfig} = {},\n) {\n  const config = {\n    method: data ? 'POST' : 'GET',\n    body: data ? JSON.stringify(data) : undefined,\n    headers: {\n      Authorization: token ? `Bearer ${token}` : undefined,\n      'Content-Type': data ? 'application/json' : undefined,\n      ...customHeaders,\n    },\n    ...customConfig,\n  }\n\n  return window.fetch(`${apiURL}/${endpoint}`, config).then(async response => {\n    if (response.status === 401) {\n      queryCache.clear()\n      await auth.logout()\n      // refresh the page for them\n      window.location.assign(window.location)\n      return Promise.reject({message: 'Please re-authenticate.'})\n    }\n    const data = await response.json()\n    if (response.ok) {\n      return data\n    } else {\n      return Promise.reject(data)\n    }\n  })\n}\n\nexport {client}\n","\nimport * as React from 'react'\nimport {queryCache} from 'react-query'\nimport * as auth from 'auth-provider'\nimport {client} from 'utils/api-client'\nimport {useAsync} from 'utils/hooks'\nimport {setQueryDataForBook} from 'utils/books'\nimport {FullPageSpinner, FullPageErrorFallback} from 'components/lib'\n\nasync function bootstrapAppData() {\n  let user = null\n\n  const token = await auth.getToken()\n  if (token) {\n    const data = await client('bootstrap', {token})\n    queryCache.setQueryData('list-items', data.listItems, {\n      staleTime: 5000,\n    })\n    for (const listItem of data.listItems) {\n      setQueryDataForBook(listItem.book)\n    }\n    user = data.user\n  }\n  return user\n}\n\nconst AuthContext = React.createContext()\nAuthContext.displayName = 'AuthContext'\n\nfunction AuthProvider(props) {\n  const {\n    data: user,\n    status,\n    error,\n    isLoading,\n    isIdle,\n    isError,\n    isSuccess,\n    run,\n    setData,\n  } = useAsync()\n\n  React.useEffect(() => {\n    const appDataPromise = bootstrapAppData()\n    run(appDataPromise)\n  }, [run])\n\n  const login = React.useCallback(\n    form => auth.login(form).then(user => setData(user)),\n    [setData],\n  )\n  const register = React.useCallback(\n    form => auth.register(form).then(user => setData(user)),\n    [setData],\n  )\n  const logout = React.useCallback(() => {\n    auth.logout()\n    queryCache.clear()\n    setData(null)\n  }, [setData])\n\n  const value = React.useMemo(\n    () => ({user, login, logout, register}),\n    [login, logout, register, user],\n  )\n\n  if (isLoading || isIdle) {\n    return <FullPageSpinner />\n  }\n\n  if (isError) {\n    return <FullPageErrorFallback error={error} />\n  }\n\n  if (isSuccess) {\n    return <AuthContext.Provider value={value} {...props} />\n  }\n\n  throw new Error(`Unhandled status: ${status}`)\n}\n\nfunction useAuth() {\n  const context = React.useContext(AuthContext)\n  if (context === undefined) {\n    throw new Error(`useAuth must be used within a AuthProvider`)\n  }\n  return context\n}\n\nfunction useClient() {\n  const {user} = useAuth()\n  const token = user?.token\n  return React.useCallback(\n    (endpoint, config) => client(endpoint, {...config, token}),\n    [token],\n  )\n}\n\nexport {AuthProvider, useAuth, useClient}\n","import React from 'react'\n\nconst CircleButton = props => (\n  <span {...props} className=\"rounded p-0 w-40 h-40 border-solid border-2 border-light-gray-500 cursor-pointer leading-none flex items-center justify-center bg-blue text-white \" />\n)\n  \nconst BookListUL = (\n  <ul className=\"list-none p-0 grid grid-rows-listul gap-2\" />\n)\n\nconst Spinner = () => {\n  return (\n    <div atia-label=\"loading\" className=\" flex justify-center items-center\">\n      <div className=\"animate-spin rounded-full h-32 w-32 border-t-2 border-b-2 border-purple-500\"></div>\n    </div>\n  )\n}\n\nconst Button = props => (\n  <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" {...props} />\n)\n\nconst inputStyles = (\n  <div className=\"border-0 border-black pt-2 pr-3 bg-white text-black\" />\n)\n\nconst Input = props => (\n  <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" {...props} />\n)\n\nconst Textarea = props => {\n  <textarea className={inputStyles} {...props} />\n}\n\nconst Dialog = props => (\n  <div className=\"max-w-md rounded-sm pb-1 shadow-lg m-8\" {...props} />\n)\n\nconst FormGroup = (\n  <div className=\"flex flex-col w-full max-w-ws\" />\n)\n\nfunction FullPageSpinner() {\n  return (\n    <div\n      className=\"h-2 flex text-lg flex-col justify-center items-center\"\n    >\n      <Spinner />\n    </div>\n  )\n}\n\nconst Link = (\n  <link className=\"text-blue-300 hover:text-green-300 hover:underline\" />\n)\n\nconst errorMessageVariants = {\n  stacked: \"block\",\n  inline: \"inline-block\"\n}\n\nfunction ErrorMessage({error, variant = 'stacked', ...props}) {\n  return (\n    <div\n      role=\"alert\"\n      className={[\"text-red-500\", errorMessageVariants[variant]]}\n      {...props}\n    >\n      <span>There was an error: </span>\n      <pre\n        className=\"whitespace-normal md:whitespace-pre m-0 -mb-5\"\n      >\n        {error.message}\n      </pre>\n    </div>\n  )\n}\n\nfunction FullPageErrorFallback({error}) {\n  return (\n    <div\n      role=\"alert\"\n      className=\"text-red-500 h-auto flex flex-col justify-center content-center\"\n    >\n      <p>Uh oh... There's a problem. Try refreshing the app.</p>\n      <pre>{error.message}</pre>\n    </div>\n  )\n}\n\nexport {\n  FullPageErrorFallback,\n  ErrorMessage,\n  CircleButton,\n  BookListUL,\n  Spinner,\n  Button,\n  Input,\n  Textarea,\n  Dialog,\n  FormGroup,\n  FullPageSpinner,\n  Link,\n}\n","import * as React from 'react'\nimport {useQuery, queryCache} from 'react-query'\nimport {useClient} from 'context/auth-context'\nimport bookPlaceholderSvg from 'assets/book-placeholder.svg'\n\nconst loadingBook = {\n  title: 'Loading...',\n  author: 'loading...',\n  coverImageUrl: bookPlaceholderSvg,\n  publisher: 'Loading Publishing',\n  synopsis: 'Loading...',\n  loadingBook: true,\n}\n\nconst loadingBooks = Array.from({length: 10}, (v, index) => ({\n  id: `loading-book-${index}`,\n  ...loadingBook,\n}))\n\nconst bookQueryConfig = {\n  staleTime: 1000 * 60 * 60,\n  cacheTime: 1000 * 60 * 60,\n}\n\nconst getBookSearchConfig = (client, query) => ({\n  queryKey: ['bookSearch', {query}],\n  queryFn: () =>\n    client(`books?query=${encodeURIComponent(query)}`).then(data => data.books),\n  config: {\n    onSuccess(books) {\n      for (const book of books) {\n        queryCache.setQueryData(\n          ['book', {bookId: book.id}],\n          book,\n          bookQueryConfig,\n        )\n      }\n    },\n  },\n})\n\nfunction useBookSearch(query) {\n  const client = useClient()\n  const result = useQuery(getBookSearchConfig(client, query))\n  return {...result, books: result.data ?? loadingBooks}\n}\n\nfunction useBook(bookId) {\n  const client = useClient()\n  const {data} = useQuery({\n    queryKey: ['book', {bookId}],\n    queryFn: () => client(`books/${bookId}`).then(data => data.book),\n    ...bookQueryConfig,\n  })\n  return data ?? loadingBook\n}\n\nfunction useRefetchBookSearchQuery() {\n  const client = useClient()\n  return React.useCallback(\n    async function refetchBookSearchQuery() {\n      queryCache.removeQueries('bookSearch')\n      await queryCache.prefetchQuery(getBookSearchConfig(client, ''))\n    },\n    [client],\n  )\n}\n\nfunction setQueryDataForBook(book) {\n  queryCache.setQueryData(['book', {bookId: book.id}], book, bookQueryConfig)\n}\n\nexport {useBook, useBookSearch, useRefetchBookSearchQuery, setQueryDataForBook}\n","export default __webpack_public_path__ + \"static/media/book-placeholder.0a37bda0.svg\";","import * as React from 'react'\n\nfunction useSafeDispatch(dispatch) {\n  const mounted = React.useRef(false)\n  React.useLayoutEffect(() => {\n    mounted.current = true\n    return () => (mounted.current = false)\n  }, [])\n  return React.useCallback(\n    (...args) => (mounted.current ? dispatch(...args) : void 0),\n    [dispatch],\n  )\n}\n\n// Example usage:\n// const {data, error, status, run} = useAsync()\n// React.useEffect(() => {\n//   run(fetchPokemon(pokemonName))\n// }, [pokemonName, run])\nconst defaultInitialState = {status: 'idle', data: null, error: null}\nfunction useAsync(initialState) {\n  const initialStateRef = React.useRef({\n    ...defaultInitialState,\n    ...initialState,\n  })\n  const [{status, data, error}, setState] = React.useReducer(\n    (s, a) => ({...s, ...a}),\n    initialStateRef.current,\n  )\n\n  const safeSetState = useSafeDispatch(setState)\n\n  const setData = React.useCallback(\n    data => safeSetState({data, status: 'resolved'}),\n    [safeSetState],\n  )\n  const setError = React.useCallback(\n    error => safeSetState({error, status: 'rejected'}),\n    [safeSetState],\n  )\n  const reset = React.useCallback(\n    () => safeSetState(initialStateRef.current),\n    [safeSetState],\n  )\n\n  const run = React.useCallback(\n    promise => {\n      if (!promise || !promise.then) {\n        throw new Error(\n          `The argument passed to useAsync().run must be a promise. Maybe a function that's passed isn't returning anything?`,\n        )\n      }\n      safeSetState({status: 'pending'})\n      return promise.then(\n        data => {\n          setData(data)\n          return data\n        },\n        error => {\n          setError(error)\n          return Promise.reject(error)\n        },\n      )\n    },\n    [safeSetState, setData, setError],\n  )\n\n  return {\n    // using the same names that react-query uses for convenience\n    isIdle: status === 'idle',\n    isLoading: status === 'pending',\n    isError: status === 'rejected',\n    isSuccess: status === 'resolved',\n\n    setData,\n    setError,\n    error,\n    status,\n    data,\n    run,\n    reset,\n  }\n}\n\nexport {useAsync}\n","// dynamically export the server based on the environment\n// using CommonJS in this file because it's a bit simpler\n// even though mixing CJS and ESM is not typically recommended\n// It is possible to do this with ESM using `codegen.macro`\n// and you can take a look at an example of this here:\n// https://github.com/kentcdodds/bookshelf/blob/aef4f122428718ff422e203c6a68301dca50b396/src/test/server/index.js\n\nif (process.env.NODE_ENV === 'development') {\n  module.exports = require('./dev-server')\n} else if (process.env.NODE_ENV === 'test') {\n  module.exports = require('./test-server')\n} else {\n  // in normal apps you'll not do anything in this case\n  // but for this workshop app, we're actually going to\n  // deploy our mock service worker to production\n  // so normally, this condition would just look like this:\n\n  // module.exports = \"\"\n\n  // but for us, since we're shipping the dev server to prod\n  // we'll do the same thing we did for development:\n  module.exports = require('./dev-server')\n}\n","import booksData from './books-data.json'\nimport {matchSorter} from 'match-sorter'\n\nlet books = [...booksData]\n\nasync function create(book) {\n  books.push(book)\n  return book\n}\n\nasync function read(bookId) {\n  return books.find(book => book.id === bookId)\n}\n\nasync function readManyNotInList(ids) {\n  return books.filter(book => !ids.includes(book.id))\n}\n\nasync function query(search) {\n  return matchSorter(books, search, {\n    keys: [\n      'title',\n      'author',\n      'publisher',\n      {threshold: matchSorter.rankings.CONTAINS, key: 'synopsis'},\n    ],\n  })\n}\n\nasync function reset() {\n  books = [...booksData]\n}\n\nexport {create, query, read, readManyNotInList, reset}\n","const usersKey = '__bookshelf_users__'\nlet users = {}\nconst persist = () =>\n  window.localStorage.setItem(usersKey, JSON.stringify(users))\nconst load = () =>\n  Object.assign(users, JSON.parse(window.localStorage.getItem(usersKey)))\n\n// initialize\ntry {\n  load()\n} catch (error) {\n  persist()\n  // ignore json parse error\n}\n\nwindow.__bookshelf = window.__bookshelf || {}\nwindow.__bookshelf.purgeUsers = () => {\n  Object.keys(users).forEach(key => {\n    delete users[key]\n  })\n  persist()\n}\n\nfunction validateUserForm({username, password}) {\n  if (!username) {\n    const error = new Error('A username is required')\n    error.status = 400\n    throw error\n  }\n  if (!password) {\n    const error = new Error('A password is required')\n    error.status = 400\n    throw error\n  }\n}\n\nasync function authenticate({username, password}) {\n  validateUserForm({username, password})\n  const id = hash(username)\n  const user = users[id] || {}\n  if (user.passwordHash === hash(password)) {\n    return {...sanitizeUser(user), token: btoa(user.id)}\n  }\n  const error = new Error('Invalid username or password')\n  error.status = 400\n  throw error\n}\n\nasync function create({username, password}) {\n  validateUserForm({username, password})\n  const id = hash(username)\n  const passwordHash = hash(password)\n  if (users[id]) {\n    const error = new Error(\n      `Cannot create a new user with the username \"${username}\"`,\n    )\n    error.status = 400\n    throw error\n  }\n  users[id] = {id, username, passwordHash}\n  persist()\n  return read(id)\n}\n\nasync function read(id) {\n  validateUser(id)\n  return sanitizeUser(users[id])\n}\n\nfunction sanitizeUser(user) {\n  const {passwordHash, ...rest} = user\n  return rest\n}\n\nasync function update(id, updates) {\n  validateUser(id)\n  Object.assign(users[id], updates)\n  persist()\n  return read(id)\n}\n\n// this would be called `delete` except that's a reserved word in JS :-(\nasync function remove(id) {\n  validateUser(id)\n  delete users[id]\n  persist()\n}\n\nfunction validateUser(id) {\n  load()\n  if (!users[id]) {\n    const error = new Error(`No user with the id \"${id}\"`)\n    error.status = 404\n    throw error\n  }\n}\n\nfunction hash(str) {\n  var hash = 5381,\n    i = str.length\n\n  while (i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i)\n  }\n  return String(hash >>> 0)\n}\n\nasync function reset() {\n  users = {}\n  persist()\n}\n\nexport {authenticate, create, read, update, remove, reset}\n","import * as booksDB from './books'\nconst listItemsKey = '__bookshelf_list_items__'\nlet listItems = {}\nconst persist = () =>\n  window.localStorage.setItem(listItemsKey, JSON.stringify(listItems))\nconst load = () =>\n  Object.assign(\n    listItems,\n    JSON.parse(window.localStorage.getItem(listItemsKey)),\n  )\n\n// initialize\ntry {\n  load()\n} catch (error) {\n  persist()\n  // ignore json parse error\n}\n\nwindow.__bookshelf = window.__bookshelf || {}\nwindow.__bookshelf.purgeListItems = () => {\n  Object.keys(listItems).forEach(key => {\n    delete listItems[key]\n  })\n  persist()\n}\n\nasync function authorize(userId, listItemId) {\n  const listItem = await read(listItemId)\n  if (listItem.ownerId !== userId) {\n    const error = new Error('User is not authorized to view that list')\n    error.status = 403\n    throw error\n  }\n}\n\nasync function create({\n  bookId = required('bookId'),\n  ownerId = required('ownerId'),\n  rating = -1,\n  notes = '',\n  startDate = Date.now(),\n  finishDate = null,\n}) {\n  const id = hash(`${bookId}${ownerId}`)\n  if (listItems[id]) {\n    const error = new Error(\n      `This user cannot create new list item for that book`,\n    )\n    error.status = 400\n    throw error\n  }\n  const book = await booksDB.read(bookId)\n  if (!book) {\n    const error = new Error(`No book found with the ID of ${bookId}`)\n    error.status = 400\n    throw error\n  }\n  listItems[id] = {id, bookId, ownerId, rating, notes, finishDate, startDate}\n  persist()\n  return read(id)\n}\n\nasync function read(id) {\n  validateListItem(id)\n  return listItems[id]\n}\n\nasync function update(id, updates) {\n  validateListItem(id)\n  Object.assign(listItems[id], updates)\n  persist()\n  return read(id)\n}\n\n// this would be called `delete` except that's a reserved word in JS :-(\nasync function remove(id) {\n  validateListItem(id)\n  delete listItems[id]\n  persist()\n}\n\nasync function readMany(userId, listItemIds) {\n  return Promise.all(\n    listItemIds.map(id => {\n      authorize(userId, id)\n      return read(id)\n    }),\n  )\n}\n\nasync function readByOwner(userId) {\n  return Object.values(listItems).filter(li => li.ownerId === userId)\n}\n\nfunction validateListItem(id) {\n  load()\n  if (!listItems[id]) {\n    const error = new Error(`No list item with the id \"${id}\"`)\n    error.status = 404\n    throw error\n  }\n}\n\nfunction hash(str) {\n  var hash = 5381,\n    i = str.length\n\n  while (i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i)\n  }\n  return String(hash >>> 0)\n}\n\nfunction required(key) {\n  const error = new Error(`${key} is required`)\n  error.status = 400\n  throw error\n}\n\nasync function reset() {\n  listItems = {}\n  persist()\n}\n\nexport {authorize, create, read, update, remove, readMany, readByOwner, reset}\n","import {rest} from 'msw'\nimport {match} from 'node-match-path'\nimport * as booksDB from 'test/data/books'\nimport * as usersDB from 'test/data/users'\nimport * as listItemsDB from 'test/data/list-items'\n\nlet sleep\nif (process.env.CI) {\n  sleep = () => Promise.resolve()\n} else if (process.env.NODE_ENV === 'test') {\n  sleep = () => Promise.resolve()\n} else {\n  sleep = (\n    t = Math.random() * ls('__bookshelf_variable_request_time__', 400) +\n      ls('__bookshelf_min_request_time__', 400),\n  ) => new Promise(resolve => setTimeout(resolve, t))\n}\n\nfunction ls(key, defaultVal) {\n  const lsVal = window.localStorage.getItem(key)\n  let val\n  if (lsVal) {\n    val = Number(lsVal)\n  }\n  return Number.isFinite(val) ? val : defaultVal\n}\n\nconst apiUrl = process.env.REACT_APP_API_URL\nconst authUrl = process.env.REACT_APP_AUTH_URL\n\nconst handlers = [\n  rest.post(`${authUrl}/login`, async (req, res, ctx) => {\n    const {username, password} = req.body\n    const user = await usersDB.authenticate({username, password})\n    return res(ctx.json({user}))\n  }),\n\n  rest.post(`${authUrl}/register`, async (req, res, ctx) => {\n    const {username, password} = req.body\n    const userFields = {username, password}\n    await usersDB.create(userFields)\n    let user\n    try {\n      user = await usersDB.authenticate(userFields)\n    } catch (error) {\n      return res(\n        ctx.status(400),\n        ctx.json({status: 400, message: error.message}),\n      )\n    }\n    return res(ctx.json({user}))\n  }),\n\n  rest.get(`${apiUrl}/me`, async (req, res, ctx) => {\n    const user = await getUser(req)\n    const token = getToken(req)\n    return res(ctx.json({user: {...user, token}}))\n  }),\n\n  rest.get(`${apiUrl}/bootstrap`, async (req, res, ctx) => {\n    const user = await getUser(req)\n    const token = getToken(req)\n    const lis = await listItemsDB.readByOwner(user.id)\n    const listItemsAndBooks = await Promise.all(\n      lis.map(async listItem => ({\n        ...listItem,\n        book: await booksDB.read(listItem.bookId),\n      })),\n    )\n    return res(ctx.json({user: {...user, token}, listItems: listItemsAndBooks}))\n  }),\n\n  rest.get(`${apiUrl}/books`, async (req, res, ctx) => {\n    if (!req.url.searchParams.has('query')) {\n      return ctx.fetch(req)\n    }\n    const query = req.url.searchParams.get('query')\n\n    let matchingBooks = []\n    if (query) {\n      matchingBooks = await booksDB.query(query)\n    } else {\n      if (getToken(req)) {\n        const user = await getUser(req)\n        const allBooks = await getBooksNotInUsersList(user.id)\n        // return a random assortment of 10 books not already in the user's list\n        matchingBooks = allBooks.slice(0, 10)\n      } else {\n        const allBooks = await booksDB.readManyNotInList([])\n        matchingBooks = allBooks.slice(0, 10)\n      }\n    }\n\n    return res(ctx.json({books: matchingBooks}))\n  }),\n\n  rest.get(`${apiUrl}/books/:bookId`, async (req, res, ctx) => {\n    const {bookId} = req.params\n    const book = await booksDB.read(bookId)\n    if (!book) {\n      return res(\n        ctx.status(404),\n        ctx.json({status: 404, message: 'Book not found'}),\n      )\n    }\n    return res(ctx.json({book}))\n  }),\n\n  rest.get(`${apiUrl}/list-items`, async (req, res, ctx) => {\n    const user = await getUser(req)\n    const lis = await listItemsDB.readByOwner(user.id)\n    const listItemsAndBooks = await Promise.all(\n      lis.map(async listItem => ({\n        ...listItem,\n        book: await booksDB.read(listItem.bookId),\n      })),\n    )\n    return res(ctx.json({listItems: listItemsAndBooks}))\n  }),\n\n  rest.post(`${apiUrl}/list-items`, async (req, res, ctx) => {\n    const user = await getUser(req)\n    const {bookId} = req.body\n    const listItem = await listItemsDB.create({\n      ownerId: user.id,\n      bookId: bookId,\n    })\n    const book = await booksDB.read(bookId)\n    return res(ctx.json({listItem: {...listItem, book}}))\n  }),\n\n  rest.put(`${apiUrl}/list-items/:listItemId`, async (req, res, ctx) => {\n    const user = await getUser(req)\n    const {listItemId} = req.params\n    const updates = req.body\n    await listItemsDB.authorize(user.id, listItemId)\n    const updatedListItem = await listItemsDB.update(listItemId, updates)\n    const book = await booksDB.read(updatedListItem.bookId)\n    return res(ctx.json({listItem: {...updatedListItem, book}}))\n  }),\n\n  rest.delete(`${apiUrl}/list-items/:listItemId`, async (req, res, ctx) => {\n    const user = await getUser(req)\n    const {listItemId} = req.params\n    await listItemsDB.authorize(user.id, listItemId)\n    await listItemsDB.remove(listItemId)\n    return res(ctx.json({success: true}))\n  }),\n\n  rest.post(`${apiUrl}/profile`, async (req, res, ctx) => {\n    // here's where we'd actually send the report to some real data store.\n    return res(ctx.json({success: true}))\n  }),\n].map(handler => {\n  const originalResolver = handler.resolver\n  handler.resolver = async function resolver(req, res, ctx) {\n    try {\n      if (shouldFail(req)) {\n        throw new Error('Request failure (for testing purposes).')\n      }\n      const result = await originalResolver(req, res, ctx)\n      return result\n    } catch (error) {\n      const status = error.status || 500\n      return res(\n        ctx.status(status),\n        ctx.json({status, message: error.message || 'Unknown Error'}),\n      )\n    } finally {\n      await sleep()\n    }\n  }\n  return handler\n})\n\nfunction shouldFail(req) {\n  if (JSON.stringify(req.body)?.includes('FAIL')) return true\n  if (req.url.searchParams.toString()?.includes('FAIL')) return true\n  if (process.env.NODE_ENV === 'test') return false\n  const failureRate = Number(\n    window.localStorage.getItem('__bookshelf_failure_rate__') || 0,\n  )\n  if (Math.random() < failureRate) return true\n  if (requestMatchesFailConfig(req)) return true\n\n  return false\n}\n\nfunction requestMatchesFailConfig(req) {\n  function configMatches({requestMethod, urlMatch}) {\n    return (\n      (requestMethod === 'ALL' || req.method === requestMethod) &&\n      match(urlMatch, req.url.pathname).matches\n    )\n  }\n  try {\n    const failConfig = JSON.parse(\n      window.localStorage.getItem('__bookshelf_request_fail_config__') || '[]',\n    )\n    if (failConfig.some(configMatches)) return true\n  } catch (error) {\n    window.localStorage.removeItem('__bookshelf_request_fail_config__')\n  }\n  return false\n}\n\nconst getToken = req => req.headers.get('Authorization')?.replace('Bearer ', '')\n\nasync function getUser(req) {\n  const token = getToken(req)\n  if (!token) {\n    const error = new Error('A token must be provided')\n    error.status = 401\n    throw error\n  }\n  let userId\n  try {\n    userId = atob(token)\n  } catch (e) {\n    const error = new Error('Invalid token. Please login again.')\n    error.status = 401\n    throw error\n  }\n  const user = await usersDB.read(userId)\n  return user\n}\n\nasync function getBooksNotInUsersList(userId) {\n  const bookIdsInUsersList = (await listItemsDB.readByOwner(userId)).map(\n    li => li.bookId,\n  )\n  const books = await booksDB.readManyNotInList(bookIdsInUsersList)\n  return books\n}\n\nexport {handlers}\n","import {setupWorker} from 'msw'\nimport {handlers} from './server-handlers'\n\nconst fullUrl = new URL(\"http://localhost:3000\")\n\nconst server = setupWorker(...handlers)\n\nserver.start({\n  quiet: true,\n  serviceWorker: {\n    url: fullUrl.pathname + 'mockServiceWorker.js',\n  },\n})\n\nexport * from 'msw'\nexport {server}\n","import * as React from 'react'\nimport {useAuth} from './context/auth-context'\nimport {FullPageSpinner} from './components/lib'\n\nconst AuthenticatedApp = React.lazy(() =>\n  import(/* webpackPrefetch: true */ './authenticated-app'),\n)\nconst UnauthenticatedApp = React.lazy(() => import('./unauthenticated-app'))\n\nfunction App() {\n  const {user} = useAuth()\n  return (\n    <React.Suspense fallback={<FullPageSpinner />}>\n      {user ? <AuthenticatedApp /> : <UnauthenticatedApp />}\n    </React.Suspense>\n  )\n}\n\nexport {App}\n","import * as React from 'react'\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport {ReactQueryConfigProvider} from 'react-query'\nimport {AuthProvider} from './auth-context'\n\nconst queryConfig = {\n  queries: {\n    useErrorBoundary: true,\n    refetchOnWindowFocus: false,\n    retry(failureCount, error) {\n      if (error.status === 404) return false\n      else if (failureCount < 2) return true\n      else return false\n    },\n  },\n}\n\nfunction AppProviders({children}) {\n  return (\n    <ReactQueryConfigProvider config={queryConfig}>\n      <Router>\n        <AuthProvider>{children}</AuthProvider>\n      </Router>\n    </ReactQueryConfigProvider>\n  )\n}\n\nexport {AppProviders}\n","// import {loadDevTools} from './dev-tools/load'\nimport './bootstrap'\nimport * as React from 'react'\nimport ReactDOM from 'react-dom'\nimport {App} from './app'\nimport {AppProviders} from './context'\n\n\nReactDOM.render(\n  <AppProviders>\n    <App />\n  </AppProviders>,\n document.getElementById('root')\n)"],"sourceRoot":""}
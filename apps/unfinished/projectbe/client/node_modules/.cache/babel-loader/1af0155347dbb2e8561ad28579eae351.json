{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from 'react';\n\nfunction useSafeDispatch(dispatch) {\n  _s();\n\n  const mounted = React.useRef(false);\n  React.useLayoutEffect(() => {\n    mounted.current = true;\n    return () => mounted.current = false;\n  }, []);\n  return React.useCallback((...args) => mounted.current ? dispatch(...args) : void 0, [dispatch]);\n} // Example usage:\n// const {data, error, status, run} = useAsync()\n// React.useEffect(() => {\n//   run(fetchPokemon(pokemonName))\n// }, [pokemonName, run])\n\n\n_s(useSafeDispatch, \"pk07pkgTuRupakQWQjlI9cR9Cfc=\");\n\nconst defaultInitialState = {\n  status: 'idle',\n  data: null,\n  error: null\n};\n\nfunction useAsync(initialState) {\n  _s2();\n\n  const initialStateRef = React.useRef({ ...defaultInitialState,\n    ...initialState\n  });\n  const [{\n    status,\n    data,\n    error\n  }, setState] = React.useReducer((s, a) => ({ ...s,\n    ...a\n  }), initialStateRef.current);\n  const safeSetState = useSafeDispatch(setState);\n  const setData = React.useCallback(data => safeSetState({\n    data,\n    status: 'resolved'\n  }), [safeSetState]);\n  const setError = React.useCallback(error => safeSetState({\n    error,\n    status: 'rejected'\n  }), [safeSetState]);\n  const reset = React.useCallback(() => safeSetState(initialStateRef.current), [safeSetState]);\n  const run = React.useCallback(promise => {\n    if (!promise || !promise.then) {\n      throw new Error(`The argument passed to useAsync().run must be a promise. Maybe a function that's passed isn't returning anything?`);\n    }\n\n    safeSetState({\n      status: 'pending'\n    });\n    return promise.then(data => {\n      setData(data);\n      return data;\n    }, error => {\n      setError(error);\n      return Promise.reject(error);\n    });\n  }, [safeSetState, setData, setError]);\n  return {\n    // using the same names that react-query uses for convenience\n    isIdle: status === 'idle',\n    isLoading: status === 'pending',\n    isError: status === 'rejected',\n    isSuccess: status === 'resolved',\n    setData,\n    setError,\n    error,\n    status,\n    data,\n    run,\n    reset\n  };\n}\n\n_s2(useAsync, \"cDcIxKbBjjuZ8IthLEwM0x5PwVw=\", false, function () {\n  return [useSafeDispatch];\n});\n\nexport { useAsync };","map":{"version":3,"sources":["/home/felipelx/Desktop/workspace/react/projectbe/src/utils/hooks.js"],"names":["React","useSafeDispatch","dispatch","mounted","useRef","useLayoutEffect","current","useCallback","args","defaultInitialState","status","data","error","useAsync","initialState","initialStateRef","setState","useReducer","s","a","safeSetState","setData","setError","reset","run","promise","then","Error","Promise","reject","isIdle","isLoading","isError","isSuccess"],"mappings":"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","sourcesContent":["import * as React from 'react'\n\nfunction useSafeDispatch(dispatch) {\n  const mounted = React.useRef(false)\n  React.useLayoutEffect(() => {\n    mounted.current = true\n    return () => (mounted.current = false)\n  }, [])\n  return React.useCallback(\n    (...args) => (mounted.current ? dispatch(...args) : void 0),\n    [dispatch],\n  )\n}\n\n// Example usage:\n// const {data, error, status, run} = useAsync()\n// React.useEffect(() => {\n//   run(fetchPokemon(pokemonName))\n// }, [pokemonName, run])\nconst defaultInitialState = {status: 'idle', data: null, error: null}\nfunction useAsync(initialState) {\n  const initialStateRef = React.useRef({\n    ...defaultInitialState,\n    ...initialState,\n  })\n  const [{status, data, error}, setState] = React.useReducer(\n    (s, a) => ({...s, ...a}),\n    initialStateRef.current,\n  )\n\n  const safeSetState = useSafeDispatch(setState)\n\n  const setData = React.useCallback(\n    data => safeSetState({data, status: 'resolved'}),\n    [safeSetState],\n  )\n  const setError = React.useCallback(\n    error => safeSetState({error, status: 'rejected'}),\n    [safeSetState],\n  )\n  const reset = React.useCallback(\n    () => safeSetState(initialStateRef.current),\n    [safeSetState],\n  )\n\n  const run = React.useCallback(\n    promise => {\n      if (!promise || !promise.then) {\n        throw new Error(\n          `The argument passed to useAsync().run must be a promise. Maybe a function that's passed isn't returning anything?`,\n        )\n      }\n      safeSetState({status: 'pending'})\n      return promise.then(\n        data => {\n          setData(data)\n          return data\n        },\n        error => {\n          setError(error)\n          return Promise.reject(error)\n        },\n      )\n    },\n    [safeSetState, setData, setError],\n  )\n\n  return {\n    // using the same names that react-query uses for convenience\n    isIdle: status === 'idle',\n    isLoading: status === 'pending',\n    isError: status === 'rejected',\n    isSuccess: status === 'resolved',\n\n    setData,\n    setError,\n    error,\n    status,\n    data,\n    run,\n    reset,\n  }\n}\n\nexport {useAsync}\n"]},"metadata":{},"sourceType":"module"}
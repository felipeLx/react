{"ast":null,"code":"import { useRef, useState, useCallback } from 'react';\n/**\n * Check if a component is controlled or uncontrolled and return the correct\n * state value and setter accordingly. If the component state is controlled by\n * the app, the setter is a noop.\n *\n * @param controlledValue\n * @param defaultValue\n */\n\nfunction useControlledState(controlledValue, defaultValue) {\n  var controlledRef = useRef(controlledValue != null);\n\n  var _useState = useState(defaultValue),\n      valueState = _useState[0],\n      setValue = _useState[1];\n\n  var set = useCallback(function (n) {\n    if (!controlledRef.current) {\n      setValue(n);\n    }\n  }, []);\n  return [controlledRef.current ? controlledValue : valueState, set];\n}\n\nexport { useControlledState };","map":{"version":3,"sources":["/home/felipelx/Desktop/workspace/react/projectbe/node_modules/@reach/utils/use-controlled-state/dist/reach-utils-use-controlled-state.esm.js"],"names":["useRef","useState","useCallback","useControlledState","controlledValue","defaultValue","controlledRef","_useState","valueState","setValue","set","n","current"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,WAA3B,QAA8C,OAA9C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,kBAAT,CAA4BC,eAA5B,EAA6CC,YAA7C,EAA2D;AACzD,MAAIC,aAAa,GAAGN,MAAM,CAACI,eAAe,IAAI,IAApB,CAA1B;;AAEA,MAAIG,SAAS,GAAGN,QAAQ,CAACI,YAAD,CAAxB;AAAA,MACIG,UAAU,GAAGD,SAAS,CAAC,CAAD,CAD1B;AAAA,MAEIE,QAAQ,GAAGF,SAAS,CAAC,CAAD,CAFxB;;AAIA,MAAIG,GAAG,GAAGR,WAAW,CAAC,UAAUS,CAAV,EAAa;AACjC,QAAI,CAACL,aAAa,CAACM,OAAnB,EAA4B;AAC1BH,MAAAA,QAAQ,CAACE,CAAD,CAAR;AACD;AACF,GAJoB,EAIlB,EAJkB,CAArB;AAKA,SAAO,CAACL,aAAa,CAACM,OAAd,GAAwBR,eAAxB,GAA0CI,UAA3C,EAAuDE,GAAvD,CAAP;AACD;;AAED,SAASP,kBAAT","sourcesContent":["import { useRef, useState, useCallback } from 'react';\n\n/**\n * Check if a component is controlled or uncontrolled and return the correct\n * state value and setter accordingly. If the component state is controlled by\n * the app, the setter is a noop.\n *\n * @param controlledValue\n * @param defaultValue\n */\nfunction useControlledState(controlledValue, defaultValue) {\n  var controlledRef = useRef(controlledValue != null);\n\n  var _useState = useState(defaultValue),\n      valueState = _useState[0],\n      setValue = _useState[1];\n\n  var set = useCallback(function (n) {\n    if (!controlledRef.current) {\n      setValue(n);\n    }\n  }, []);\n  return [controlledRef.current ? controlledValue : valueState, set];\n}\n\nexport { useControlledState };\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/felipelx/Desktop/workspace/react/projectbe/src/components/modal.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\n/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport * as React from 'react';\nimport VisuallyHidden from '@reach/visually-hidden';\nimport { Dialog, CircleButton } from 'utils';\n\nconst callAll = (...fns) => (...args) => fns.forEach(fn => fn && fn(...args));\n\nconst ModalContext = /*#__PURE__*/React.createContext();\n\nfunction Modal(props) {\n  _s();\n\n  const [isOpen, setIsOpen] = React.useState(false);\n  return jsx(ModalContext.Provider, Object.assign({\n    value: [isOpen, setIsOpen]\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }\n  }));\n}\n\n_s(Modal, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = Modal;\n\nfunction ModalDismissButton({\n  children: child\n}) {\n  _s2();\n\n  const [, setIsOpen] = React.useContext(ModalContext);\n  return /*#__PURE__*/React.cloneElement(child, {\n    onClick: callAll(() => setIsOpen(false), child.props.onClick)\n  });\n}\n\n_s2(ModalDismissButton, \"ll9WMajo265urpr44/DXPH8vPbk=\");\n\n_c2 = ModalDismissButton;\n\nfunction ModalOpenButton({\n  children: child\n}) {\n  _s3();\n\n  const [, setIsOpen] = React.useContext(ModalContext);\n  return /*#__PURE__*/React.cloneElement(child, {\n    onClick: callAll(() => setIsOpen(true), child.props.onClick)\n  });\n}\n\n_s3(ModalOpenButton, \"ll9WMajo265urpr44/DXPH8vPbk=\");\n\n_c3 = ModalOpenButton;\n\nfunction ModalContentsBase(props) {\n  _s4();\n\n  const [isOpen, setIsOpen] = React.useContext(ModalContext);\n  return jsx(Dialog, Object.assign({\n    isOpen: isOpen,\n    onDismiss: () => setIsOpen(false)\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }));\n}\n\n_s4(ModalContentsBase, \"crL3E4KEPOEq06AnoqL3v90ICw4=\");\n\n_c4 = ModalContentsBase;\n\nfunction ModalContents({\n  title,\n  children,\n  ...props\n}) {\n  return jsx(ModalContentsBase, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }), jsx(\"div\", {\n    css: {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, jsx(ModalDismissButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, jsx(CircleButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, jsx(VisuallyHidden, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Close\"), jsx(\"span\", {\n    \"aria-hidden\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"\\xD7\")))), jsx(\"h3\", {\n    css: {\n      textAlign: 'center',\n      fontSize: '2em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, title), children);\n}\n\n_c5 = ModalContents;\nexport { Modal, ModalDismissButton, ModalOpenButton, ModalContents };\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Modal\");\n$RefreshReg$(_c2, \"ModalDismissButton\");\n$RefreshReg$(_c3, \"ModalOpenButton\");\n$RefreshReg$(_c4, \"ModalContentsBase\");\n$RefreshReg$(_c5, \"ModalContents\");","map":{"version":3,"sources":["/home/felipelx/Desktop/workspace/react/projectbe/src/components/modal.js"],"names":["jsx","React","VisuallyHidden","Dialog","CircleButton","callAll","fns","args","forEach","fn","ModalContext","createContext","Modal","props","isOpen","setIsOpen","useState","ModalDismissButton","children","child","useContext","cloneElement","onClick","ModalOpenButton","ModalContentsBase","ModalContents","title","display","justifyContent","textAlign","fontSize"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport {jsx} from '@emotion/core'\n\nimport * as React from 'react'\nimport VisuallyHidden from '@reach/visually-hidden'\nimport {Dialog, CircleButton} from 'utils'\n\nconst callAll =\n  (...fns) =>\n  (...args) =>\n    fns.forEach(fn => fn && fn(...args))\n\nconst ModalContext = React.createContext()\n\nfunction Modal(props) {\n  const [isOpen, setIsOpen] = React.useState(false)\n\n  return <ModalContext.Provider value={[isOpen, setIsOpen]} {...props} />\n}\n\nfunction ModalDismissButton({children: child}) {\n  const [, setIsOpen] = React.useContext(ModalContext)\n  return React.cloneElement(child, {\n    onClick: callAll(() => setIsOpen(false), child.props.onClick),\n  })\n}\n\nfunction ModalOpenButton({children: child}) {\n  const [, setIsOpen] = React.useContext(ModalContext)\n  return React.cloneElement(child, {\n    onClick: callAll(() => setIsOpen(true), child.props.onClick),\n  })\n}\n\nfunction ModalContentsBase(props) {\n  const [isOpen, setIsOpen] = React.useContext(ModalContext)\n  return (\n    <Dialog isOpen={isOpen} onDismiss={() => setIsOpen(false)} {...props} />\n  )\n}\n\nfunction ModalContents({title, children, ...props}) {\n  return (\n    <ModalContentsBase {...props}>\n      <div css={{display: 'flex', justifyContent: 'flex-end'}}>\n        <ModalDismissButton>\n          <CircleButton>\n            <VisuallyHidden>Close</VisuallyHidden>\n            <span aria-hidden>Ã—</span>\n          </CircleButton>\n        </ModalDismissButton>\n      </div>\n      <h3 css={{textAlign: 'center', fontSize: '2em'}}>{title}</h3>\n      {children}\n    </ModalContentsBase>\n  )\n}\n\nexport {Modal, ModalDismissButton, ModalOpenButton, ModalContents}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"function loadDevTools(callback) {\n  // check URL first\n  const url = new URL(window.location);\n  const setInUrl = url.searchParams.has('dev-tools');\n  const urlEnabled = url.searchParams.get('dev-tools') === 'true';\n\n  if (setInUrl) {\n    if (urlEnabled) {\n      return go();\n    } else {\n      return callback();\n    }\n  } // the check localStorage\n\n\n  const localStorageValue = window.localStorage.getItem('dev-tools');\n  const setInLocalStorage = localStorageValue != undefined;\n  const localStorageEnabled = localStorageValue === 'true';\n\n  if (setInLocalStorage) {\n    if (localStorageEnabled) {\n      return go();\n    } else {\n      return callback();\n    }\n  } // the default is off in Cypress\n\n\n  if (window.Cypress) return callback(); // the default is on in development\n\n  if (process.env.NODE_ENV === 'development') return go();\n  return callback();\n\n  function go() {\n    // use a dynamic import so the dev-tools code isn't bundled with the regular\n    // app code so we don't worry about bundle size.\n    import('./dev-tools').then(devTools => devTools.install()).finally(callback);\n  }\n}\n\nexport { loadDevTools };\n/*\neslint\n  eqeqeq: \"off\",\n*/","map":{"version":3,"sources":["/home/felipelx/Desktop/workspace/react/projectbe/src/dev-tools/load.js"],"names":["loadDevTools","callback","url","URL","window","location","setInUrl","searchParams","has","urlEnabled","get","go","localStorageValue","localStorage","getItem","setInLocalStorage","undefined","localStorageEnabled","Cypress","process","env","NODE_ENV","then","devTools","install","finally"],"mappings":"AAAA,SAASA,YAAT,CAAsBC,QAAtB,EAAgC;AAC9B;AACA,QAAMC,GAAG,GAAG,IAAIC,GAAJ,CAAQC,MAAM,CAACC,QAAf,CAAZ;AACA,QAAMC,QAAQ,GAAGJ,GAAG,CAACK,YAAJ,CAAiBC,GAAjB,CAAqB,WAArB,CAAjB;AACA,QAAMC,UAAU,GAAGP,GAAG,CAACK,YAAJ,CAAiBG,GAAjB,CAAqB,WAArB,MAAsC,MAAzD;;AACA,MAAIJ,QAAJ,EAAc;AACZ,QAAIG,UAAJ,EAAgB;AACd,aAAOE,EAAE,EAAT;AACD,KAFD,MAEO;AACL,aAAOV,QAAQ,EAAf;AACD;AACF,GAX6B,CAa9B;;;AACA,QAAMW,iBAAiB,GAAGR,MAAM,CAACS,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,CAA1B;AACA,QAAMC,iBAAiB,GAAGH,iBAAiB,IAAII,SAA/C;AACA,QAAMC,mBAAmB,GAAGL,iBAAiB,KAAK,MAAlD;;AACA,MAAIG,iBAAJ,EAAuB;AACrB,QAAIE,mBAAJ,EAAyB;AACvB,aAAON,EAAE,EAAT;AACD,KAFD,MAEO;AACL,aAAOV,QAAQ,EAAf;AACD;AACF,GAvB6B,CAyB9B;;;AACA,MAAIG,MAAM,CAACc,OAAX,EAAoB,OAAOjB,QAAQ,EAAf,CA1BU,CA4B9B;;AACA,MAAIkB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C,OAAOV,EAAE,EAAT;AAE5C,SAAOV,QAAQ,EAAf;;AAEA,WAASU,EAAT,GAAc;AACZ;AACA;AACA,WAAO,aAAP,EACGW,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,OAAT,EADpB,EAEGC,OAFH,CAEWxB,QAFX;AAGD;AACF;;AAED,SAAQD,YAAR;AAEA;AACA;AACA;AACA","sourcesContent":["function loadDevTools(callback) {\n  // check URL first\n  const url = new URL(window.location)\n  const setInUrl = url.searchParams.has('dev-tools')\n  const urlEnabled = url.searchParams.get('dev-tools') === 'true'\n  if (setInUrl) {\n    if (urlEnabled) {\n      return go()\n    } else {\n      return callback()\n    }\n  }\n\n  // the check localStorage\n  const localStorageValue = window.localStorage.getItem('dev-tools')\n  const setInLocalStorage = localStorageValue != undefined\n  const localStorageEnabled = localStorageValue === 'true'\n  if (setInLocalStorage) {\n    if (localStorageEnabled) {\n      return go()\n    } else {\n      return callback()\n    }\n  }\n\n  // the default is off in Cypress\n  if (window.Cypress) return callback()\n\n  // the default is on in development\n  if (process.env.NODE_ENV === 'development') return go()\n\n  return callback()\n\n  function go() {\n    // use a dynamic import so the dev-tools code isn't bundled with the regular\n    // app code so we don't worry about bundle size.\n    import('./dev-tools')\n      .then(devTools => devTools.install())\n      .finally(callback)\n  }\n}\n\nexport {loadDevTools}\n\n/*\neslint\n  eqeqeq: \"off\",\n*/\n"]},"metadata":{},"sourceType":"module"}
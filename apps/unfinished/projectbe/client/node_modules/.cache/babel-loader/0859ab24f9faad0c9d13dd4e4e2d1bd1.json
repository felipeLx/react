{"ast":null,"code":"var _jsxFileName = \"/home/felipelx/Desktop/workspace/react/projectbe/src/components/login/loginForm.js\",\n    _s = $RefreshSig$();\n\n/** @jsx jsx */\nimport { jsx } from '@emotion/core';\nimport * as React from 'react';\nimport 'bootstrap/dist/css/bootstrap-reboot.css';\nimport { Input, FormGroup, Spinner, Button } from '../../utils/utils';\nimport { Modal, ModalContents, ModalOpenButton } from './modal';\n\nfunction LoginForm({\n  onSubmit,\n  submitButton\n}) {\n  function handleSubmit(event) {\n    event.preventDefault();\n    const {\n      username,\n      password\n    } = event.target.elements;\n    onSubmit({\n      username: username.value,\n      password: password.value\n    });\n  }\n\n  return jsx(\"form\", {\n    css: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'stretch',\n      '> div': {\n        margin: '10px auto',\n        width: '100%',\n        maxWidth: '300px'\n      }\n    },\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, jsx(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Username\"), jsx(Input, {\n    id: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })), jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, jsx(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Password\"), jsx(Input, {\n    id: \"password\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })), jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.cloneElement(submitButton, {\n    type: 'submit'\n  })), jsx(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }));\n}\n\n_c = LoginForm;\n\nfunction CustomLogin() {\n  _s();\n\n  const [isLoginFormOpen, setIsLoginFormOpen] = React.useState(false);\n\n  function login(formData) {\n    console.log('login', formData);\n  }\n\n  function register(formData) {\n    console.log('register', formData);\n  }\n\n  return jsx(\"div\", {\n    css: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(2, minmax(0, 1fr))',\n      gripGap: '0.75rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, jsx(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, !isLoginFormOpen ? jsx(ModalOpenButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 31\n    }\n  }, jsx(Button, {\n    onClick: () => setIsLoginFormOpen(true),\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Login\")) : null, jsx(ModalContents, {\n    \"aria-label\": \"Login form\",\n    title: \"Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, isLoginFormOpen ? jsx(LoginForm, {\n    onSubmit: login,\n    submitButton: jsx(Button, {\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }, \"Login\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 32\n    }\n  }) : null)), jsx(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, !isLoginFormOpen ? jsx(ModalOpenButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 31\n    }\n  }, jsx(Button, {\n    onClick: () => setIsLoginFormOpen(false),\n    variant: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Register\")) : null, jsx(ModalContents, {\n    \"aria-label\": \"Registration form\",\n    title: \"Register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, isLoginFormOpen ? jsx(LoginForm, {\n    onSubmit: register,\n    submitButton: jsx(Button, {\n      variant: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, \"Register\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 32\n    }\n  }) : null)));\n}\n\n_s(CustomLogin, \"buG+/tvhpIslq+CbXdesPNozacE=\");\n\n_c2 = CustomLogin;\nexport { CustomLogin };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"CustomLogin\");","map":{"version":3,"sources":["/home/felipelx/Desktop/workspace/react/projectbe/src/components/login/loginForm.js"],"names":["jsx","React","Input","FormGroup","Spinner","Button","Modal","ModalContents","ModalOpenButton","LoginForm","onSubmit","submitButton","handleSubmit","event","preventDefault","username","password","target","elements","value","display","flexDirection","alignItems","margin","width","maxWidth","cloneElement","type","CustomLogin","isLoginFormOpen","setIsLoginFormOpen","useState","login","formData","console","log","register","gridTemplateColumns","gripGap"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport {jsx} from '@emotion/core'\nimport * as React from 'react'\nimport 'bootstrap/dist/css/bootstrap-reboot.css'\nimport {Input, FormGroup, Spinner, Button} from '../../utils/utils'\nimport {Modal, ModalContents, ModalOpenButton} from './modal'\n\nfunction LoginForm({onSubmit, submitButton}) {\n  function handleSubmit(event) {\n    event.preventDefault()\n    const {username, password} = event.target.elements\n\n    onSubmit({\n      username: username.value,\n      password: password.value,\n    })\n  }\n\n  return (\n    <form \n      css={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'stretch',\n        '> div': {\n          margin: '10px auto',\n          width: '100%',\n          maxWidth: '300px',\n        }\n      }}\n      onSubmit={handleSubmit}\n    >\n      <FormGroup>\n        <label htmlFor=\"username\">Username</label>\n        <Input id=\"username\" />\n      </FormGroup>\n      <FormGroup>\n        <label htmlFor=\"password\">Password</label>\n        <Input id=\"password\" type=\"password\" />\n      </FormGroup>\n      <div>{React.cloneElement(submitButton, {type: 'submit'})}</div>\n      <Spinner />\n    </form>\n  )\n}\n\nfunction CustomLogin() {\n  const [isLoginFormOpen, setIsLoginFormOpen] = React.useState(false)\n  function login(formData) {\n        console.log('login', formData)\n      }\n    \n      function register(formData) {\n        console.log('register', formData)\n      }\n    \n    return(\n        <div\n        css={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(2, minmax(0, 1fr))',\n          gripGap: '0.75rem',\n        }}\n      >\n        <Modal>\n          {!isLoginFormOpen ? <ModalOpenButton>\n            <Button onClick={() => setIsLoginFormOpen(true)} variant=\"primary\">Login</Button>\n          </ModalOpenButton> : null}\n          <ModalContents aria-label=\"Login form\" title=\"Login\">\n            {isLoginFormOpen ? <LoginForm\n              onSubmit={login}\n              submitButton={<Button variant=\"primary\">Login</Button>}\n            /> : null}\n          </ModalContents>\n        </Modal>\n        <Modal>\n          {!isLoginFormOpen ? <ModalOpenButton>\n            <Button onClick={() => setIsLoginFormOpen(false)} variant=\"secondary\">Register</Button>\n          </ModalOpenButton> : null}\n          <ModalContents aria-label=\"Registration form\" title=\"Register\">\n            {isLoginFormOpen ? <LoginForm\n              onSubmit={register}\n              submitButton={<Button variant=\"secondary\">Register</Button>}\n            /> : null}\n          </ModalContents>\n        </Modal>\n      </div>\n    )\n}\n\nexport {CustomLogin}"]},"metadata":{},"sourceType":"module"}
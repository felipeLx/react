{"version":3,"file":"stop-runaway-react-effects.umd.js","sources":["../src/index.js"],"sourcesContent":["import React from 'react'\n\n// I'm not sure these are the right numbers and changes to these numbers will\n// not be considered breaking. We're just trying to approximate what a usual\n// combination would be to determine whether the effect is runaway.\nconst DEFAULT_CALL_COUNT = 60\nconst DEFAULT_TIME_LIMIT = 1000\n\n// this file is basically gone in production...\n// but people can still call the functions safely either way.\nconst noop = () => function restore() {}\nconst last = array => array[array.length - 1]\n\nconst hijackEffectHook =\n  process.env.NODE_ENV === 'production'\n    ? noop\n    : function hijackEffectHook(\n        hookName,\n        {callCount = DEFAULT_CALL_COUNT, timeLimit = DEFAULT_TIME_LIMIT} = {},\n      ) {\n        const originalHook = React[hookName]\n\n        React[hookName] = getHijackedEffectHook({\n          hookName,\n          callCount,\n          timeLimit,\n        })\n\n        return function restore() {\n          React[hookName] = originalHook\n        }\n      }\n\nfunction getHijackedEffectHook({hookName, callCount, timeLimit}) {\n  const originalHook = React[hookName]\n  return function useHijackedEffect(...args) {\n    const [hookCallback, deps] = args\n    const ref = React.useRef([])\n    const warnedRef = React.useRef(false)\n\n    return originalHook.call(\n      React,\n      () => {\n        const calls = ref.current\n        const oldestCall = last(calls)\n        const now = Date.now()\n        calls.push({time: now, args})\n        if (\n          !warnedRef.current &&\n          calls.length >= callCount &&\n          oldestCall.time > now - timeLimit\n        ) {\n          const allRecentCallDependencies = calls.map(c => c.args[1])\n          const messages = [\n            `The following effect callback was invoked ${callCount} times in ${timeLimit}ms`,\n            '\\n',\n            hookCallback.toString(),\n          ]\n          if (allRecentCallDependencies.some(Boolean)) {\n            messages.push(\n              '\\n',\n              `Here are the dependencies this effect was called with the last ${callCount} times:`,\n              allRecentCallDependencies,\n            )\n            messages.push(\n              '\\n',\n              `Here are the dependency changes between each call:`,\n              allRecentCallDependencies.map((callDeps, callIndex) => {\n                if (callIndex === 0) {\n                  return callDeps\n                }\n                return callDeps.map((dep, depIndex) => {\n                  const prevDep =\n                    allRecentCallDependencies[callIndex - 1][depIndex]\n                  return Object.is(dep, prevDep) ? 'UNCHANGED' : dep\n                })\n              }),\n            )\n            messages.push(\n              '\\n',\n              `Try to find where those changing dependencies are initialized. You probably need to memoize them using React.useMemo or React.useCallback`,\n            )\n          } else {\n            messages.push(\n              '\\n',\n              `This effect is not called with a dependencies argument and probably should. Start by adding \\`[]\\` as a second argument to the ${hookName} call, then add any other dependencies as elements to that array. You may also be interested in installing ESLint with https://npm.im/eslint-plugin-react-hooks`,\n            )\n          }\n          console.warn(...messages)\n          warnedRef.current = true\n\n          throw new Error(\n            `Uh oh... Looks like we've got a runaway ${hookName}. Check the console for more info. Make sure the ${hookName} is being passed the right dependencies. (By the way, this error message is from https://npm.im/stop-runaway-react-effects, not React)`,\n          )\n        }\n\n        // remove old records\n        ref.current = calls\n          // only store up to the callCount\n          .slice(0, callCount)\n          // only store effects called within the timeLimit\n          .filter(r => r.time > now - timeLimit)\n\n        // call the original callback\n        return hookCallback()\n      },\n      deps,\n    )\n  }\n}\n\nconst hijackEffects =\n  process.env.NODE_ENV === 'production'\n    ? noop\n    : function hijackEffects(options) {\n        const restoreUseEffect = hijackEffectHook('useEffect', options)\n        const restoreUseLayoutEffect = hijackEffectHook(\n          'useLayoutEffect',\n          options,\n        )\n        return function restore() {\n          restoreUseEffect()\n          restoreUseLayoutEffect()\n        }\n      }\n\nexport {hijackEffects, hijackEffectHook}\n"],"names":["DEFAULT_CALL_COUNT","DEFAULT_TIME_LIMIT","last","array","length","hijackEffectHook","hookName","callCount","timeLimit","originalHook","React","getHijackedEffectHook","args","hookCallback","deps","ref","useRef","warnedRef","call","calls","current","oldestCall","now","Date","push","time","allRecentCallDependencies","map","c","messages","toString","some","Boolean","callDeps","callIndex","dep","depIndex","prevDep","Object","is","console","warn","Error","slice","filter","r","hijackEffects","options","restoreUseEffect","restoreUseLayoutEffect"],"mappings":";;;;;;;;EAGA;EACA;;EACA,IAAMA,kBAAkB,GAAG,EAA3B;EACA,IAAMC,kBAAkB,GAAG,IAA3B;;EAKA,IAAMC,IAAI,GAAG,UAAAC,KAAK;EAAA,SAAIA,KAAK,CAACA,KAAK,CAACC,MAAN,GAAe,CAAhB,CAAT;EAAA,CAAlB;;MAEMC,gBAAgB,GAGhB,UACEC,QADF,SAGE;EAAA,gCADmE,EACnE;EAAA,4BADCC,SACD;EAAA,MADCA,SACD,+BADaP,kBACb;EAAA,4BADiCQ,SACjC;EAAA,MADiCA,SACjC,+BAD6CP,kBAC7C;;EACA,MAAMQ,YAAY,GAAGC,KAAK,CAACJ,QAAD,CAA1B;EAEAI,EAAAA,KAAK,CAACJ,QAAD,CAAL,GAAkBK,qBAAqB,CAAC;EACtCL,IAAAA,QAAQ,EAARA,QADsC;EAEtCC,IAAAA,SAAS,EAATA,SAFsC;EAGtCC,IAAAA,SAAS,EAATA;EAHsC,GAAD,CAAvC;EAMA,SAAO,YAAmB;EACxBE,IAAAA,KAAK,CAACJ,QAAD,CAAL,GAAkBG,YAAlB;EACD,GAFD;EAGD;;EAEP,SAASE,qBAAT,QAAiE;EAAA,MAAjCL,QAAiC,SAAjCA,QAAiC;EAAA,MAAvBC,SAAuB,SAAvBA,SAAuB;EAAA,MAAZC,SAAY,SAAZA,SAAY;EAC/D,MAAMC,YAAY,GAAGC,KAAK,CAACJ,QAAD,CAA1B;EACA,SAAO,YAAoC;EAAA,sCAANM,IAAM;EAANA,MAAAA,IAAM;EAAA;;EAAA,QAClCC,YADkC,GACZD,IADY;EAAA,QACpBE,IADoB,GACZF,IADY;EAEzC,QAAMG,GAAG,GAAGL,KAAK,CAACM,MAAN,CAAa,EAAb,CAAZ;EACA,QAAMC,SAAS,GAAGP,KAAK,CAACM,MAAN,CAAa,KAAb,CAAlB;EAEA,WAAOP,YAAY,CAACS,IAAb,CACLR,KADK,EAEL,YAAM;EACJ,UAAMS,KAAK,GAAGJ,GAAG,CAACK,OAAlB;EACA,UAAMC,UAAU,GAAGnB,IAAI,CAACiB,KAAD,CAAvB;EACA,UAAMG,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ;EACAH,MAAAA,KAAK,CAACK,IAAN,CAAW;EAACC,QAAAA,IAAI,EAAEH,GAAP;EAAYV,QAAAA,IAAI,EAAJA;EAAZ,OAAX;;EACA,UACE,CAACK,SAAS,CAACG,OAAX,IACAD,KAAK,CAACf,MAAN,IAAgBG,SADhB,IAEAc,UAAU,CAACI,IAAX,GAAkBH,GAAG,GAAGd,SAH1B,EAIE;EAAA;;EACA,YAAMkB,yBAAyB,GAAGP,KAAK,CAACQ,GAAN,CAAU,UAAAC,CAAC;EAAA,iBAAIA,CAAC,CAAChB,IAAF,CAAO,CAAP,CAAJ;EAAA,SAAX,CAAlC;EACA,YAAMiB,QAAQ,GAAG,gDAC8BtB,SAD9B,kBACoDC,SADpD,SAEf,IAFe,EAGfK,YAAY,CAACiB,QAAb,EAHe,CAAjB;;EAKA,YAAIJ,yBAAyB,CAACK,IAA1B,CAA+BC,OAA/B,CAAJ,EAA6C;EAC3CH,UAAAA,QAAQ,CAACL,IAAT,CACE,IADF,sEAEoEjB,SAFpE,cAGEmB,yBAHF;EAKAG,UAAAA,QAAQ,CAACL,IAAT,CACE,IADF,wDAGEE,yBAAyB,CAACC,GAA1B,CAA8B,UAACM,QAAD,EAAWC,SAAX,EAAyB;EACrD,gBAAIA,SAAS,KAAK,CAAlB,EAAqB;EACnB,qBAAOD,QAAP;EACD;;EACD,mBAAOA,QAAQ,CAACN,GAAT,CAAa,UAACQ,GAAD,EAAMC,QAAN,EAAmB;EACrC,kBAAMC,OAAO,GACXX,yBAAyB,CAACQ,SAAS,GAAG,CAAb,CAAzB,CAAyCE,QAAzC,CADF;EAEA,qBAAOE,MAAM,CAACC,EAAP,CAAUJ,GAAV,EAAeE,OAAf,IAA0B,WAA1B,GAAwCF,GAA/C;EACD,aAJM,CAAP;EAKD,WATD,CAHF;EAcAN,UAAAA,QAAQ,CAACL,IAAT,CACE,IADF;EAID,SAxBD,MAwBO;EACLK,UAAAA,QAAQ,CAACL,IAAT,CACE,IADF,oIAEoIlB,QAFpI;EAID;;EACD,oBAAAkC,OAAO,EAACC,IAAR,iBAAgBZ,QAAhB;;EACAZ,QAAAA,SAAS,CAACG,OAAV,GAAoB,IAApB;EAEA,cAAM,IAAIsB,KAAJ,8CACuCpC,QADvC,yDACmGA,QADnG,4IAAN;EAGD,OApDG;;;EAuDJS,MAAAA,GAAG,CAACK,OAAJ,GAAcD,KAAK;EAAA,OAEhBwB,KAFW,CAEL,CAFK,EAEFpC,SAFE;EAAA,OAIXqC,MAJW,CAIJ,UAAAC,CAAC;EAAA,eAAIA,CAAC,CAACpB,IAAF,GAASH,GAAG,GAAGd,SAAnB;EAAA,OAJG,CAAd,CAvDI;;EA8DJ,aAAOK,YAAY,EAAnB;EACD,KAjEI,EAkELC,IAlEK,CAAP;EAoED,GAzED;EA0ED;;MAEKgC,aAAa,GAGb,UAAuBC,OAAvB,EAAgC;EAC9B,MAAMC,gBAAgB,GAAG3C,gBAAgB,CAAC,WAAD,EAAc0C,OAAd,CAAzC;EACA,MAAME,sBAAsB,GAAG5C,gBAAgB,CAC7C,iBAD6C,EAE7C0C,OAF6C,CAA/C;EAIA,SAAO,YAAmB;EACxBC,IAAAA,gBAAgB;EAChBC,IAAAA,sBAAsB;EACvB,GAHD;EAID;;;;;;;;;;;;;"}
{"ast":null,"code":"var _jsxFileName = \"/home/felipe/Desktop/workspace/burger-app/src/containers/Checkout/Checkout.js\";\nimport React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\nimport * as action from '../../store/actions/index';\n\nclass Checkout extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.checkoutCancelledHandler = () => {\n      this.props.history.goBack();\n    };\n\n    this.checkoutContinuedHandler = () => {\n      this.props.history.replace('/checkout/contact-data');\n    };\n  }\n\n  // state = {\n  //     ingredients: null,\n  //     price: 0\n  // }\n  // componentWillMount() {\n  //     const query = new URLSearchParams(this.props.location.search);\n  //     const ingredients = {};\n  //     let price = 0;\n  //     for(let param of query.entries()) {\n  //         if(param[0] === 'price') {\n  //             price = param[1];\n  //         } else {\n  //             ingredients[param[0]] = +param[1];\n  //         }\n  //     }\n  //     this.setState({ingredients: ingredients, totalPrice: price});\n  // }\n  componentWillMount() {\n    this.props.onInitPurchase();\n  }\n\n  render() {\n    let summary = React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n\n    if (this.props.ings) {\n      const purchasedRedirect = this.props.purchased ? React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }) : null;\n      summary = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, purchasedRedirect, React.createElement(CheckoutSummary, {\n        ingredients: this.props.ings,\n        checkoutCancelled: this.checkoutCancelledHandler,\n        checkoutContinued: this.checkoutContinuedHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: this.props.match.path + '/contact-data',\n        component: ContactData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }));\n    }\n\n    return {\n      summary\n    };\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    purchased: state.order.purchased\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInitPurchase: () => dispatch(action.purchaseInit())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);","map":{"version":3,"sources":["/home/felipe/Desktop/workspace/burger-app/src/containers/Checkout/Checkout.js"],"names":["React","Component","Route","Redirect","connect","CheckoutSummary","ContactData","action","Checkout","checkoutCancelledHandler","props","history","goBack","checkoutContinuedHandler","replace","componentWillMount","onInitPurchase","render","summary","ings","purchasedRedirect","purchased","match","path","mapStateToProps","state","burgerBuilder","ingredients","order","mapDispatchToProps","dispatch","purchaseInit"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,eAAP,MAA4B,wDAA5B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,2BAAxB;;AAEA,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAyB7BQ,wBAzB6B,GAyBF,MAAM;AAC7B,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,MAAnB;AACH,KA3B4B;;AAAA,SA6B7BC,wBA7B6B,GA6BF,MAAM;AAC7B,WAAKH,KAAL,CAAWC,OAAX,CAAmBG,OAAnB,CAA2B,wBAA3B;AACH,KA/B4B;AAAA;;AAC7B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEAC,EAAAA,kBAAkB,GAAI;AAClB,SAAKL,KAAL,CAAWM,cAAX;AACH;;AAUDC,EAAAA,MAAM,GAAG;AACL,QAAIC,OAAO,GAAG,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;;AAEA,QAAG,KAAKR,KAAL,CAAWS,IAAd,EAAoB;AAChB,YAAMC,iBAAiB,GAAG,KAAKV,KAAL,CAAWW,SAAX,GAAuB,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvB,GAA6C,IAAvE;AACAH,MAAAA,OAAO,GACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEE,iBADF,EAEA,oBAAC,eAAD;AACI,QAAA,WAAW,EAAE,KAAKV,KAAL,CAAWS,IAD5B;AAEI,QAAA,iBAAiB,EAAE,KAAKV,wBAF5B;AAGI,QAAA,iBAAiB,EAAE,KAAKI,wBAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,EAMA,oBAAC,KAAD;AACI,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWY,KAAX,CAAiBC,IAAjB,GAAwB,eADlC;AAEI,QAAA,SAAS,EAAEjB,WAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANA,CADJ;AAYH;;AACD,WACQ;AAACY,MAAAA;AAAD,KADR;AAGH;;AAtD4B;;AA0DjC,MAAMM,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHN,IAAAA,IAAI,EAAEM,KAAK,CAACC,aAAN,CAAoBC,WADvB;AAEHN,IAAAA,SAAS,EAAEI,KAAK,CAACG,KAAN,CAAYP;AAFpB,GAAP;AAIH,CALD;;AAOA,MAAMQ,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHd,IAAAA,cAAc,EAAE,MAAMc,QAAQ,CAACvB,MAAM,CAACwB,YAAP,EAAD;AAD3B,GAAP;AAGH,CAJD;;AAMA,eAAe3B,OAAO,CAACoB,eAAD,EAAkBK,kBAAlB,CAAP,CAA8CrB,QAA9C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\nimport * as action from '../../store/actions/index';\n\nclass Checkout extends Component {\n    // state = {\n    //     ingredients: null,\n    //     price: 0\n    // }\n\n    // componentWillMount() {\n    //     const query = new URLSearchParams(this.props.location.search);\n    //     const ingredients = {};\n    //     let price = 0;\n    //     for(let param of query.entries()) {\n    //         if(param[0] === 'price') {\n    //             price = param[1];\n    //         } else {\n    //             ingredients[param[0]] = +param[1];\n    //         }\n            \n    //     }\n    //     this.setState({ingredients: ingredients, totalPrice: price});\n    // }\n\n    componentWillMount () {\n        this.props.onInitPurchase();\n    }\n\n    checkoutCancelledHandler = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinuedHandler = () => {\n        this.props.history.replace('/checkout/contact-data');\n    }\n\n    render() {\n        let summary = <Redirect to=\"/\" />\n        \n        if(this.props.ings) {\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\n            summary = (\n                <div>\n                { purchasedRedirect }    \n                <CheckoutSummary \n                    ingredients={this.props.ings}\n                    checkoutCancelled={this.checkoutCancelledHandler}\n                    checkoutContinued={this.checkoutContinuedHandler} />\n                <Route \n                    path={this.props.match.path + '/contact-data'} \n                    component={ContactData} />        \n                </div>    \n            )\n        }\n        return (\n                {summary}\n        );\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onInitPurchase: () => dispatch(action.purchaseInit())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Checkout);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import * as actionTypes from './actionTypes';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    error: error\n  };\n};\nexport const logout = () => {\n  // localStorage.removeItem('token');\n  // localStorage.removeItem('expirationDate');\n  // localStorage.removeItem('userId');\n  return {\n    type: actionTypes.AUTH_INITIATE_LOGOUT\n  };\n};\nexport const logoutSucceed = () => {\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  // return dispatch => {\n  //     setTimeout(() => {  \n  //         dispatch(this.logout()); \n  //     }, expirationTime * 1000);\n  // };\n  return {\n    type: actionTypes.AUTH_CHECK_TIMEOUT,\n    expirationTime: expirationTime\n  };\n};\nexport const auth = (email, password, isSignUp) => {\n  return {\n    type: actionTypes.AUTH_USER,\n    email: email,\n    password: password,\n    isSignUp: isSignUp\n  };\n};\nexport const setAuthRedirectPath = path => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\nexport const authCheckState = () => {\n  return {\n    type: actionTypes.AUTH_CHECK_STATE\n  };\n};","map":{"version":3,"sources":["/home/felipe/Desktop/workspace/burger-app/src/store/actions/auth.js"],"names":["actionTypes","authStart","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","idToken","authFail","error","logout","AUTH_INITIATE_LOGOUT","logoutSucceed","AUTH_LOGOUT","checkAuthTimeout","expirationTime","AUTH_CHECK_TIMEOUT","auth","email","password","isSignUp","AUTH_USER","setAuthRedirectPath","path","SET_AUTH_REDIRECT_PATH","authCheckState","AUTH_CHECK_STATE"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,SAAO;AACHC,IAAAA,IAAI,EAAEF,WAAW,CAACG;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1C,SAAO;AACHJ,IAAAA,IAAI,EAAEF,WAAW,CAACO,YADf;AAEHC,IAAAA,OAAO,EAAEH,KAFN;AAGHC,IAAAA,MAAM,EAAEA;AAHL,GAAP;AAKH,CANM;AAQP,OAAO,MAAMG,QAAQ,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHR,IAAAA,IAAI,EAAEF,WAAW,CAACO,YADf;AAEHG,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,MAAM,GAAG,MAAM;AACxB;AACA;AACA;AACA,SAAO;AACHT,IAAAA,IAAI,EAAEF,WAAW,CAACY;AADf,GAAP;AAGH,CAPM;AASP,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/B,SAAO;AAACX,IAAAA,IAAI,EAAEF,WAAW,CAACc;AAAnB,GAAP;AACH,CAFM;AAIP,OAAO,MAAMC,gBAAgB,GAAIC,cAAD,IAAoB;AAChD;AACA;AACA;AACA;AACA;AACA,SAAO;AACHd,IAAAA,IAAI,EAAEF,WAAW,CAACiB,kBADf;AAEHD,IAAAA,cAAc,EAAEA;AAFb,GAAP;AAIH,CAVM;AAYP,OAAO,MAAME,IAAI,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,KAA+B;AAC/C,SAAO;AACHnB,IAAAA,IAAI,EAAEF,WAAW,CAACsB,SADf;AAEHH,IAAAA,KAAK,EAAEA,KAFJ;AAGHC,IAAAA,QAAQ,EAAEA,QAHP;AAIHC,IAAAA,QAAQ,EAAEA;AAJP,GAAP;AAMH,CAPM;AASP,OAAO,MAAME,mBAAmB,GAAIC,IAAD,IAAU;AACzC,SAAO;AACHtB,IAAAA,IAAI,EAAEF,WAAW,CAACyB,sBADf;AAEHD,IAAAA,IAAI,EAAEA;AAFH,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,cAAc,GAAG,MAAM;AAChC,SAAO;AACHxB,IAAAA,IAAI,EAAEF,WAAW,CAAC2B;AADf,GAAP;AAGH,CAJM","sourcesContent":["import * as actionTypes from './actionTypes';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = (token, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        idToken: token,\n        userId: userId\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        error: error\n    };\n};\n\nexport const logout = () => {\n    // localStorage.removeItem('token');\n    // localStorage.removeItem('expirationDate');\n    // localStorage.removeItem('userId');\n    return {\n        type: actionTypes.AUTH_INITIATE_LOGOUT\n    };\n}\n\nexport const logoutSucceed = () => {\n    return {type: actionTypes.AUTH_LOGOUT};\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n    // return dispatch => {\n    //     setTimeout(() => {  \n    //         dispatch(this.logout()); \n    //     }, expirationTime * 1000);\n    // };\n    return {\n        type: actionTypes.AUTH_CHECK_TIMEOUT,\n        expirationTime: expirationTime\n    }\n};\n\nexport const auth = (email, password, isSignUp) => {\n    return {\n        type: actionTypes.AUTH_USER,\n        email: email,\n        password: password,\n        isSignUp: isSignUp\n    };\n};\n\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path: path\n    }\n};\n\nexport const authCheckState = () => {\n    return {\n        type: actionTypes.AUTH_CHECK_STATE\n    };\n};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from\"/home/felipe/Desktop/workspace/burger-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/felipe/Desktop/workspace/burger-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/felipe/Desktop/workspace/burger-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/felipe/Desktop/workspace/burger-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/felipe/Desktop/workspace/burger-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/felipe/Desktop/workspace/burger-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{connect}from'react-redux';import{updateObject,checkValidity}from'../../../shared/utility';import Button from'../../../components/UI/Button/Button';import Spinner from'../../../components/UI/Spinner/Spinner';import classes from'./ContactData.module.css';import axios from'../../../axios-orders';import Input from'../../../components/UI/Input/Input';import withErrorHandler from'../../../hoc/withErrorHandler/withErrorHandler';import*as actions from'../../../store/actions/index';var ContactData=/*#__PURE__*/function(_Component){_inherits(ContactData,_Component);function ContactData(){var _getPrototypeOf2;var _this;_classCallCheck(this,ContactData);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(ContactData)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={orderForm:{name:{elementType:'input',elementConfig:{type:'text',placeholder:'Your Name'},value:'',validation:{required:true},valid:false,touched:false},street:{elementType:'input',elementConfig:{type:'text',placeholder:'Street'},value:'',validation:{required:true},valid:false,touched:false},zipCode:{elementType:'input',elementConfig:{type:'text',placeholder:'ZIP Code'},value:'',validation:{required:true,minLength:5,maxLength:5,isNumeric:true},valid:false,touched:false},country:{elementType:'input',elementConfig:{type:'text',placeholder:'Country'},value:'',validation:{required:true},valid:false,touched:false},email:{elementType:'input',elementConfig:{type:'email',placeholder:'Your E-Mail'},value:'',validation:{required:true,isEmail:true},valid:false,touched:false},deliveryMethod:{elementType:'select',elementConfig:{options:[{value:'fastest',displayValue:'Fastest'},{value:'cheapest',displayValue:'Cheapest'}]},value:'fastest',validation:{},valid:true}},formIsValid:false};_this.orderHandler=function(event){event.preventDefault();var formData={};for(var formElementIdentifier in _this.state.orderForm){formData[formElementIdentifier]=_this.state.orderForm[formElementIdentifier].value;}var order={ingredients:_this.props.ings,price:_this.props.price,orderData:formData,userId:_this.props.userId};_this.props.onOrderBurger(order,_this.props.token);};_this.inputChangedHandler=function(event,inputIdentifier){var updatedFormElement=updateObject(_this.state.orderForm[inputIdentifier],{value:event.target.value,valid:checkValidity(event.target.value,_this.state.orderForm[inputIdentifier].validation),touched:true});var updatedOrderForm=updateObject(_this.state.orderForm,_defineProperty({},inputIdentifier,updatedFormElement));var formIsValid=true;for(var _inputIdentifier in updatedOrderForm){formIsValid=updatedOrderForm[_inputIdentifier].valid&&formIsValid;}_this.setState({orderForm:updatedOrderForm,formIsValid:formIsValid});};return _this;}_createClass(ContactData,[{key:\"render\",value:function render(){var _this2=this;var formElementsArray=[];for(var key in this.state.orderForm){formElementsArray.push({id:key,config:this.state.orderForm[key]});}var form=React.createElement(\"form\",{onSubmit:this.orderHandler},formElementsArray.map(function(formElement){return React.createElement(Input,{key:formElement.id,elementType:formElement.config.elementType,elementConfig:formElement.config.elementConfig,value:formElement.config.value,invalid:!formElement.config.valid,shouldValidate:formElement.config.validation,touched:formElement.config.touched,changed:function changed(event){return _this2.inputChangedHandler(event,formElement.id);}});}),React.createElement(Button,{btnType:\"Success\",disabled:!this.state.formIsValid},\"ORDER\"));if(this.props.loading){form=React.createElement(Spinner,null);}return React.createElement(\"div\",{className:classes.ContactData},React.createElement(\"h4\",null,\"Enter your Contact Data\"),form);}}]);return ContactData;}(Component);var mapStateToProps=function mapStateToProps(state){return{ings:state.burgerBuilder.ingredients,price:state.burgerBuilder.totalPrice,loading:state.order.loading,token:state.auth.token,userId:state.auth.userId};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onOrderBurger:function onOrderBurger(orderData,token){return dispatch(actions.purchaseBurger(orderData,token));}};};export default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(ContactData,axios));","map":{"version":3,"sources":["/home/felipe/Desktop/workspace/burger-app/src/containers/Checkout/ContactData/ContactData.js"],"names":["React","Component","connect","updateObject","checkValidity","Button","Spinner","classes","axios","Input","withErrorHandler","actions","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","street","zipCode","minLength","maxLength","isNumeric","country","email","isEmail","deliveryMethod","options","displayValue","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","ingredients","props","ings","price","orderData","userId","onOrderBurger","token","inputChangedHandler","inputIdentifier","updatedFormElement","target","updatedOrderForm","setState","formElementsArray","key","push","id","config","form","map","formElement","loading","mapStateToProps","burgerBuilder","totalPrice","auth","mapDispatchToProps","dispatch","purchaseBurger"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { updateObject, checkValidity } from '../../../shared/utility';\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport classes from './ContactData.module.css';\nimport axios from '../../../axios-orders';\nimport Input from '../../../components/UI/Input/Input';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler'\nimport * as actions from '../../../store/actions/index';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'ZIP Code'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5,\n                    isNumeric: true\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your E-Mail'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'}\n                    ]\n                },\n                value: 'fastest',\n                validation: {},\n                valid: true\n            }\n        },\n        formIsValid: false\n    }\n\n    orderHandler = ( event ) => {\n        event.preventDefault();\n  \n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n        const order = {\n            ingredients: this.props.ings,\n            price: this.props.price,\n            orderData: formData,\n            userId: this.props.userId\n        }\n\n        this.props.onOrderBurger(order, this.props.token);\n        \n    }\n\n    \n    inputChangedHandler = (event, inputIdentifier) => {\n        \n        const updatedFormElement = updateObject(this.state.orderForm[inputIdentifier], {\n            value: event.target.value,\n            valid: checkValidity(event.target.value, this.state.orderForm[inputIdentifier].validation),\n            touched: true\n        });\n        const updatedOrderForm = updateObject(this.state.orderForm, {\n            [inputIdentifier]: updatedFormElement\n        });\n        \n        let formIsValid = true;\n        for (let inputIdentifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\n    }\n\n    render () {\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(formElement => (\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\n                ))}\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n        if ( this.props.loading ) {\n            form = <Spinner />;\n        }\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger: (orderData,token) => dispatch(actions.purchaseBurger(orderData, token))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));"]},"metadata":{},"sourceType":"module"}
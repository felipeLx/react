{"ast":null,"code":"import _defineProperty from \"/home/felipe/Desktop/workspace/burger-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/felipe/Desktop/workspace/burger-app/src/containers/BurgerBuilder/BurgerBuilder.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport axios from '../../axios-orders';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/BuildControls/BuildControls';\nimport Modal from '../../UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport Spinner from '../../UI/Spinner/Spinner';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: null,\n      totalPrice: 4,\n      pucharsable: false,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      // alert('You continue!');\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        customer: {\n          name: 'Felipe Lisboa',\n          address: {\n            street: 'Teststreet, 1',\n            zipCode: '41351',\n            country: 'Brazil'\n          },\n          email: 'test@test.com'\n        },\n        deliveryMethod: 'fastest'\n      };\n      axios.post('/orders.json', order).then(response => {\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n      }).catch(error => {\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://react-my-burger-2c7eb.firebaseio.com/ingredients.json').then(response => {\n      this.setState({\n        ingredients: response.data\n      });\n    }).catch(error => {\n      this.setState({\n        error: true\n      });\n    });\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      pucharsable: sum > 0\n    });\n  }\n\n  render() {\n    const disableInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disableInfo) {\n      disableInfo[key] = disableInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.state.error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Ingredients can't be loaded!\") : React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    });\n\n    if (this.state.ingredients) {\n      burger = React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Burger, {\n        ingredients: this.state.ingredients,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(BuildControls, {\n        ingredientAdd: this.addIngredientHandler,\n        ingredientRemove: this.removeIngredientHandler,\n        disabled: disableInfo,\n        purchasable: this.state.pucharsable,\n        ordered: this.purchaseHandler,\n        price: this.state.totalPrice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }));\n      orderSummary = React.createElement(OrderSummary, {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinued: this.purchaseContinueHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.loading) {\n      orderSummary = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, orderSummary), burger);\n  }\n\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);","map":{"version":3,"sources":["/home/felipe/Desktop/workspace/burger-app/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","axios","Aux","Burger","BuildControls","Modal","OrderSummary","withErrorHandler","Spinner","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","pucharsable","purchasing","loading","error","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","order","price","customer","name","address","street","zipCode","country","email","deliveryMethod","post","then","response","catch","componentDidMount","get","data","sum","Object","keys","map","igKey","reduce","el","render","disableInfo","key","orderSummary","burger"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,aAAP,MAA0B,8CAA1B;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,YAAP,MAAyB,mDAAzB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,GADe;AAEtBC,EAAAA,MAAM,EAAE,GAFc;AAGtBC,EAAAA,IAAI,EAAE,GAHgB;AAItBC,EAAAA,KAAK,EAAE;AAJe,CAA1B;;AAOA,MAAMC,aAAN,SAA4Bd,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAElCe,KAFkC,GAE1B;AACJC,MAAAA,WAAW,EAAE,IADT;AAEJC,MAAAA,UAAU,EAAE,CAFR;AAGJC,MAAAA,WAAW,EAAE,KAHT;AAIJC,MAAAA,UAAU,EAAE,KAJR;AAKJC,MAAAA,OAAO,EAAE,KALL;AAMJC,MAAAA,KAAK,EAAE;AANH,KAF0B;;AAAA,SAgClCC,oBAhCkC,GAgCVC,IAAD,IAAU;AAC7B,YAAMC,QAAQ,GAAG,KAAKT,KAAL,CAAWC,WAAX,CAAuBO,IAAvB,CAAjB;AACA,YAAME,YAAY,GAAGD,QAAQ,GAAG,CAAhC;;AACA,YAAME,kBAAkB,qBACjB,KAAKX,KAAL,CAAWC,WADM,CAAxB;;AAGAU,MAAAA,kBAAkB,CAACH,IAAD,CAAlB,GAA0BE,YAA1B;AACA,YAAME,aAAa,GAAGlB,iBAAiB,CAACc,IAAD,CAAvC;AACA,YAAMK,QAAQ,GAAG,KAAKb,KAAL,CAAWE,UAA5B;AACA,YAAMY,QAAQ,GAAGD,QAAQ,GAAGD,aAA5B;AACA,WAAKG,QAAL,CAAc;AAACb,QAAAA,UAAU,EAAEY,QAAb;AAAuBb,QAAAA,WAAW,EAAEU;AAApC,OAAd;AACA,WAAKK,mBAAL,CAAyBL,kBAAzB;AACH,KA5CiC;;AAAA,SA8ClCM,uBA9CkC,GA8CPT,IAAD,IAAU;AAChC,YAAMC,QAAQ,GAAG,KAAKT,KAAL,CAAWC,WAAX,CAAuBO,IAAvB,CAAjB;;AACA,UAAGC,QAAQ,IAAG,CAAd,EAAiB;AACb;AACH;;AACD,YAAMC,YAAY,GAAGD,QAAQ,GAAE,CAA/B;;AACA,YAAME,kBAAkB,qBACjB,KAAKX,KAAL,CAAWC,WADM,CAAxB;;AAGAU,MAAAA,kBAAkB,CAACH,IAAD,CAAlB,GAA0BE,YAA1B;AACA,YAAMQ,cAAc,GAAGxB,iBAAiB,CAACc,IAAD,CAAxC;AACA,YAAMK,QAAQ,GAAG,KAAKb,KAAL,CAAWE,UAA5B;AACA,YAAMY,QAAQ,GAAGD,QAAQ,GAAGK,cAA5B;AACA,WAAKH,QAAL,CAAc;AAACb,QAAAA,UAAU,EAAEY,QAAb;AAAuBb,QAAAA,WAAW,EAAEU;AAApC,OAAd;AACA,WAAKK,mBAAL,CAAyBL,kBAAzB;AACH,KA7DiC;;AAAA,SA+DlCQ,eA/DkC,GA+DhB,MAAM;AACpB,WAAKJ,QAAL,CAAc;AAACX,QAAAA,UAAU,EAAE;AAAb,OAAd;AACH,KAjEiC;;AAAA,SAmElCgB,qBAnEkC,GAmEV,MAAM;AAC1B,WAAKL,QAAL,CAAc;AAACX,QAAAA,UAAU,EAAE;AAAb,OAAd;AACH,KArEiC;;AAAA,SAuElCiB,uBAvEkC,GAuER,MAAM;AAC7B;AACC,WAAKN,QAAL,CAAc;AAACV,QAAAA,OAAO,EAAE;AAAV,OAAd;AACA,YAAMiB,KAAK,GAAG;AACXrB,QAAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC,WADb;AAEXsB,QAAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWE,UAFP;AAGXsB,QAAAA,QAAQ,EAAE;AACNC,UAAAA,IAAI,EAAE,eADA;AAENC,UAAAA,OAAO,EAAE;AACLC,YAAAA,MAAM,EAAE,eADH;AAELC,YAAAA,OAAO,EAAE,OAFJ;AAGLC,YAAAA,OAAO,EAAE;AAHJ,WAFH;AAONC,UAAAA,KAAK,EAAE;AAPD,SAHC;AAYXC,QAAAA,cAAc,EAAE;AAZL,OAAd;AAcA7C,MAAAA,KAAK,CAAC8C,IAAN,CAAW,cAAX,EAA2BV,KAA3B,EACKW,IADL,CACUC,QAAQ,IAAI;AACd,aAAKnB,QAAL,CAAc;AAACV,UAAAA,OAAO,EAAE,KAAV;AAAiBD,UAAAA,UAAU,EAAE;AAA7B,SAAd;AACH,OAHL,EAIK+B,KAJL,CAIW7B,KAAK,IAAI;AACZ,aAAKS,QAAL,CAAc;AAACV,UAAAA,OAAO,EAAE,KAAV;AAAiBD,UAAAA,UAAU,EAAE;AAA7B,SAAd;AACH,OANL;AAOH,KA/FiC;AAAA;;AAWlCgC,EAAAA,iBAAiB,GAAG;AAChBlD,IAAAA,KAAK,CAACmD,GAAN,CAAU,+DAAV,EACKJ,IADL,CACUC,QAAQ,IAAI;AACd,WAAKnB,QAAL,CAAc;AAACd,QAAAA,WAAW,EAAEiC,QAAQ,CAACI;AAAvB,OAAd;AACH,KAHL,EAIKH,KAJL,CAIW7B,KAAK,IAAI;AACZ,WAAKS,QAAL,CAAc;AAACT,QAAAA,KAAK,EAAE;AAAR,OAAd;AACH,KANL;AAOH;;AAEDU,EAAAA,mBAAmB,CAAEf,WAAF,EAAe;AAC9B,UAAMsC,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYxC,WAAZ,EACPyC,GADO,CACFC,KAAD,IAAW;AACZ,aAAO1C,WAAW,CAAC0C,KAAD,CAAlB;AACH,KAHO,EAIPC,MAJO,CAIA,CAACL,GAAD,EAAMM,EAAN,KAAa;AACjB,aAAON,GAAG,GAAGM,EAAb;AACH,KANO,EAML,CANK,CAAZ;AAOI,SAAK9B,QAAL,CAAc;AAACZ,MAAAA,WAAW,EAAEoC,GAAG,GAAG;AAApB,KAAd;AACP;;AAmEDO,EAAAA,MAAM,GAAG;AACL,UAAMC,WAAW,qBACV,KAAK/C,KAAL,CAAWC,WADD,CAAjB;;AAGA,SAAI,IAAI+C,GAAR,IAAeD,WAAf,EAA4B;AACxBA,MAAAA,WAAW,CAACC,GAAD,CAAX,GAAmBD,WAAW,CAACC,GAAD,CAAX,IAAoB,CAAvC;AACH;;AACD,QAAIC,YAAY,GAAG,IAAnB;AAEA,QAAIC,MAAM,GAAG,KAAKlD,KAAL,CAAWM,KAAX,GAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAnB,GAAyD,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtE;;AAEA,QAAG,KAAKN,KAAL,CAAWC,WAAd,EAA2B;AACvBiD,MAAAA,MAAM,GACF,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,WAAW,EAAE,KAAKlD,KAAL,CAAWC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,aAAD;AACI,QAAA,aAAa,EAAE,KAAKM,oBADxB;AAEI,QAAA,gBAAgB,EAAE,KAAKU,uBAF3B;AAGI,QAAA,QAAQ,EAAE8B,WAHd;AAII,QAAA,WAAW,EAAE,KAAK/C,KAAL,CAAWG,WAJ5B;AAKI,QAAA,OAAO,EAAE,KAAKgB,eALlB;AAMI,QAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWE,UANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAYI+C,MAAAA,YAAY,GAAG,oBAAC,YAAD;AACX,QAAA,WAAW,EAAE,KAAKjD,KAAL,CAAWC,WADb;AAEX,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,UAFP;AAGX,QAAA,iBAAiB,EAAE,KAAKkB,qBAHb;AAIX,QAAA,iBAAiB,EAAE,KAAKC,uBAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;AAKP;;AAED,QAAG,KAAKrB,KAAL,CAAWK,OAAd,EAAuB;AACnB4C,MAAAA,YAAY,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;AACH;;AAGD,WACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKjD,KAAL,CAAWI,UAAxB;AAAoC,MAAA,WAAW,EAAE,KAAKgB,qBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE6B,YADF,CADJ,EAIKC,MAJL,CADJ;AASH;;AA9IiC;;AAiJtC,eAAe1D,gBAAgB,CAACO,aAAD,EAAgBb,KAAhB,CAA/B","sourcesContent":["import React, { Component } from 'react';\nimport axios from '../../axios-orders';\n\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/BuildControls/BuildControls';\nimport Modal from '../../UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport Spinner from '../../UI/Spinner/Spinner';\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n}\n\nclass BurgerBuilder extends Component {\n\n    state = {\n        ingredients: null,\n        totalPrice: 4,\n        pucharsable: false,\n        purchasing: false,\n        loading: false,\n        error: false\n    }\n\n    componentDidMount() {\n        axios.get('https://react-my-burger-2c7eb.firebaseio.com/ingredients.json')\n            .then(response => {\n                this.setState({ingredients: response.data});\n            })\n            .catch(error => {\n                this.setState({error: true})\n            });\n    }\n\n    updatePurchaseState (ingredients) {\n        const sum = Object.keys(ingredients)\n            .map((igKey) => {\n                return ingredients[igKey]\n            })\n            .reduce((sum, el) => {\n                return sum + el;\n            }, 0);\n            this.setState({pucharsable: sum > 0});\n    }\n\n    addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] =updatedCount;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        if(oldCount <=0) {\n            return;\n        }\n        const updatedCount = oldCount -1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] =updatedCount;\n        const priceDeduction = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    purchaseHandler = () => {\n        this.setState({purchasing: true})\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({purchasing: false})\n    }\n\n    purchaseContinueHandler = () => {\n       // alert('You continue!');\n        this.setState({loading: true});\n        const order = {\n           ingredients: this.state.ingredients,\n           price: this.state.totalPrice,\n           customer: {\n               name: 'Felipe Lisboa',\n               address: {\n                   street: 'Teststreet, 1',\n                   zipCode: '41351',\n                   country: 'Brazil'\n               },\n               email: 'test@test.com'\n           },\n           deliveryMethod: 'fastest'\n        }\n        axios.post('/orders.json', order)\n            .then(response => {\n                this.setState({loading: false, purchasing: false});\n            })\n            .catch(error => {\n                this.setState({loading: false, purchasing: false});\n            });\n    }\n\n    render() {\n        const disableInfo = {\n            ...this.state.ingredients\n        };\n        for(let key in disableInfo) {\n            disableInfo[key] = disableInfo[key] <= 0\n        }\n        let orderSummary = null;\n        \n        let burger = this.state.error ? <p>Ingredients can't be loaded!</p> : <Spinner />\n\n        if(this.state.ingredients) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.state.ingredients} />\n                    <BuildControls \n                        ingredientAdd={this.addIngredientHandler} \n                        ingredientRemove={this.removeIngredientHandler} \n                        disabled={disableInfo}\n                        purchasable={this.state.pucharsable}\n                        ordered={this.purchaseHandler}\n                        price={this.state.totalPrice} />\n                </Aux>\n                );\n                orderSummary = <OrderSummary \n                    ingredients={this.state.ingredients} \n                    price={this.state.totalPrice}\n                    purchaseCancelled={this.purchaseCancelHandler}\n                    purchaseContinued={this.purchaseContinueHandler} />\n        }\n\n        if(this.state.loading) {\n            orderSummary = <Spinner />\n        }\n\n        \n        return(\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler} >\n                 {orderSummary}   \n                </Modal>\n                {burger}\n            </Aux>\n\n        );\n    }\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);"]},"metadata":{},"sourceType":"module"}
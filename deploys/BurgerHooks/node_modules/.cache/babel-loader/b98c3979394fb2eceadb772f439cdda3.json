{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false,\n  building: false\n};\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nconst addIngredient = (state, action) => {\n  const updatedIngredient = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n  };\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n  const updatedState = {\n    ingredients: updatedIngredients,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updatedState);\n};\n\nconst removeIngredient = (state, action) => {\n  const updatedIng = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n  };\n  const updatedIngs = updateObject(state.ingredients, updatedIng);\n  const updatedSt = {\n    ingredients: updatedIngs,\n    totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updatedSt);\n};\n\nconst setIngredients = (state, action) => {\n  return updateObject(state, {\n    ingredients: {\n      salad: action.ingredients.salad,\n      bacon: action.ingredients.bacon,\n      cheese: action.ingredients.cheese,\n      meat: action.ingredients.meat\n    },\n    totalPrice: 4,\n    error: false,\n    building: false\n  });\n};\n\nconst fetchIngredientsFailed = (state, action) => {\n  return updateObject(state, {\n    error: true\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return addIngredient(state, action);\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return removeIngredient(state, action);\n\n    case actionTypes.SET_INGREDIENTS:\n      return setIngredients(state, action);\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return fetchIngredientsFailed(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/felipe/Desktop/workspace/burger-app/src/store/reducers/burgerBuilder.js"],"names":["actionTypes","updateObject","initialState","ingredients","totalPrice","error","building","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","state","action","updatedIngredient","ingredientName","updatedIngredients","updatedState","removeIngredient","updatedIng","updatedIngs","updatedSt","setIngredients","fetchIngredientsFailed","reducer","type","ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false,\n    building: false\n};\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n};\n\nconst addIngredient = ( state, action ) => {\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 }\n    const updatedIngredients = updateObject( state.ingredients, updatedIngredient );\n    const updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true\n    }\n    return updateObject( state, updatedState );\n};\n\nconst removeIngredient = (state, action) => {\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 }\n    const updatedIngs = updateObject( state.ingredients, updatedIng );\n    const updatedSt = {\n        ingredients: updatedIngs,\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n        building: true\n    }\n    return updateObject( state, updatedSt );\n};\n\nconst setIngredients = (state, action) => {\n    return updateObject( state, {\n        ingredients: {\n            salad: action.ingredients.salad,\n            bacon: action.ingredients.bacon,\n            cheese: action.ingredients.cheese,\n            meat: action.ingredients.meat\n        },\n        totalPrice: 4,\n        error: false,\n        building: false\n    } );\n};\n\nconst fetchIngredientsFailed = (state, action) => {\n    return updateObject( state, { error: true } );\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.ADD_INGREDIENT: return addIngredient( state, action );\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);    \n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\n        default: return state;\n    }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"/home/felipe/Desktop/workspace/burger-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/felipe/Desktop/workspace/burger-app/src/containers/BurgerBuilder/BurgerBuilder.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport axios from '../../axios-orders';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/BuildControls/BuildControls';\nimport Modal from '../../UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      pucharsable: false,\n      purchasing: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      // alert('You continue!');\n      const order = {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        customer: {\n          name: 'Felipe Lisboa',\n          address: {\n            street: 'Teststreet, 1',\n            zipCode: '41351',\n            country: 'Brazil'\n          },\n          email: 'test@test.com'\n        },\n        deliveryMethod: 'fastest'\n      };\n      axios.post('/orders.json', order).then(response => console.log(response)).catch(error => console.log(error));\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      pucharsable: sum > 0\n    });\n  }\n\n  render() {\n    const disableInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disableInfo) {\n      disableInfo[key] = disableInfo[key] <= 0;\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      price: this.state.totalPrice,\n      purchaseCancelled: this.purchaseCancelHandler,\n      purchaseContinued: this.purchaseContinueHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ingredientAdd: this.addIngredientHandler,\n      ingredientRemove: this.removeIngredientHandler,\n      disabled: disableInfo,\n      purchasable: this.state.pucharsable,\n      ordered: this.purchaseHandler,\n      price: this.state.totalPrice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/home/felipe/Desktop/workspace/burger-app/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","axios","Aux","Burger","BuildControls","Modal","OrderSummary","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","pucharsable","purchasing","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","order","price","customer","name","address","street","zipCode","country","email","deliveryMethod","post","then","response","console","log","catch","error","sum","Object","keys","map","igKey","reduce","el","render","disableInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from '../../axios-orders';\n\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/BuildControls/BuildControls';\nimport Modal from '../../UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n}\n\nclass BurgerBuilder extends Component {\n\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0,\n            cheese: 0,\n            meat: 0\n        },\n        totalPrice: 4,\n        pucharsable: false,\n        purchasing: false\n    }\n\n    updatePurchaseState (ingredients) {\n        const sum = Object.keys(ingredients)\n            .map((igKey) => {\n                return ingredients[igKey]\n            })\n            .reduce((sum, el) => {\n                return sum + el;\n            }, 0);\n            this.setState({pucharsable: sum > 0});\n    }\n\n    addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] =updatedCount;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        if(oldCount <=0) {\n            return;\n        }\n        const updatedCount = oldCount -1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] =updatedCount;\n        const priceDeduction = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    purchaseHandler = () => {\n        this.setState({purchasing: true})\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({purchasing: false})\n    }\n\n    purchaseContinueHandler = () => {\n       // alert('You continue!');\n       const order = {\n           ingredients: this.state.ingredients,\n           price: this.state.totalPrice,\n           customer: {\n               name: 'Felipe Lisboa',\n               address: {\n                   street: 'Teststreet, 1',\n                   zipCode: '41351',\n                   country: 'Brazil'\n               },\n               email: 'test@test.com'\n           },\n           deliveryMethod: 'fastest'\n       }\n        axios.post('/orders.json', order)\n            .then(response => console.log(response))\n            .catch(error => console.log(error));\n    }\n\n    render() {\n        const disableInfo = {\n            ...this.state.ingredients\n        };\n        for(let key in disableInfo) {\n            disableInfo[key] = disableInfo[key] <= 0\n        }\n\n        return(\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler} >\n                    <OrderSummary \n                        ingredients={this.state.ingredients} \n                        price={this.state.totalPrice}\n                        purchaseCancelled={this.purchaseCancelHandler}\n                        purchaseContinued={this.purchaseContinueHandler}\n                    />\n                </Modal>\n                <Burger ingredients={this.state.ingredients} />\n                <BuildControls \n                    ingredientAdd={this.addIngredientHandler} \n                    ingredientRemove={this.removeIngredientHandler} \n                    disabled={disableInfo}\n                    purchasable={this.state.pucharsable}\n                    ordered={this.purchaseHandler}\n                    price={this.state.totalPrice}\n                />\n            </Aux>\n\n        );\n    }\n}\n\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}
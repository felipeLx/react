{"ast":null,"code":"var _jsxFileName = \"/home/felipe/Desktop/workspace/burger-app/src/hoc/Layout/Layout.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Aux from '../Aux/Aux';\nimport classes from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showSideDrawer: false\n    };\n\n    this.sideDrawerClosedHandler = () => {\n      this.setState({\n        showSideDrawer: false\n      });\n    };\n\n    this.sideDrawerToggleHandler = () => {\n      this.setState(prevState => {\n        return {\n          showSideDrawer: !prevState.showSideDrawer\n        };\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      isAuth: this.props.isAuthenticated,\n      drawerToggleClicked: this.sideDrawerToggleHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(SideDrawer, {\n      isAuth: this.props.isAuthenticated,\n      open: this.state.showSideDrawer,\n      closed: this.sideDrawerClosedHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      className: classes.Content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.props.children));\n  }\n\n}\n\nconst mapStateToPropst = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapStateToPropst)(Layout);","map":{"version":3,"sources":["/home/felipe/Desktop/workspace/burger-app/src/hoc/Layout/Layout.js"],"names":["React","Component","connect","Aux","classes","Toolbar","SideDrawer","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","render","props","isAuthenticated","Content","children","mapStateToPropst","auth","token"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,OAAP,MAAoB,6CAApB;AACA,OAAOC,UAAP,MAAuB,mDAAvB;;AAEA,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3BO,KAD2B,GACnB;AACJC,MAAAA,cAAc,EAAE;AADZ,KADmB;;AAAA,SAK3BC,uBAL2B,GAKD,MAAM;AAC5B,WAAKC,QAAL,CAAe;AAAEF,QAAAA,cAAc,EAAE;AAAlB,OAAf;AACH,KAP0B;;AAAA,SAS3BG,uBAT2B,GASD,MAAM;AAC5B,WAAKD,QAAL,CAAiBE,SAAF,IAAiB;AAC5B,eAAO;AAAEJ,UAAAA,cAAc,EAAE,CAACI,SAAS,CAACJ;AAA7B,SAAP;AACH,OAFD;AAGH,KAb0B;AAAA;;AAe3BK,EAAAA,MAAM,GAAI;AACN,WACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AACI,MAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,eADvB;AAEI,MAAA,mBAAmB,EAAE,KAAKJ,uBAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAII,oBAAC,UAAD;AACI,MAAA,MAAM,EAAE,KAAKG,KAAL,CAAWC,eADvB;AAEI,MAAA,IAAI,EAAE,KAAKR,KAAL,CAAWC,cAFrB;AAGI,MAAA,MAAM,EAAE,KAAKC,uBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAQI;AAAM,MAAA,SAAS,EAAEN,OAAO,CAACa,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKF,KAAL,CAAWG,QADhB,CARJ,CADJ;AAcH;;AA9B0B;;AAiC/B,MAAMC,gBAAgB,GAAGX,KAAK,IAAI;AAC9B,SAAO;AACHQ,IAAAA,eAAe,EAAER,KAAK,CAACY,IAAN,CAAWC,KAAX,KAAqB;AADnC,GAAP;AAGH,CAJD;;AAMA,eAAenB,OAAO,CAAEiB,gBAAF,CAAP,CAA4BZ,MAA5B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Aux from '../Aux/Aux';\nimport classes from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState( { showSideDrawer: false } );\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState( ( prevState ) => {\n            return { showSideDrawer: !prevState.showSideDrawer };\n        } );\n    }\n\n    render () {\n        return (\n            <Aux>\n                <Toolbar\n                    isAuth={this.props.isAuthenticated} \n                    drawerToggleClicked={this.sideDrawerToggleHandler} />\n                <SideDrawer\n                    isAuth={this.props.isAuthenticated} \n                    open={this.state.showSideDrawer}\n                    closed={this.sideDrawerClosedHandler} />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToPropst = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    };\n};\n\nexport default connect (mapStateToPropst) (Layout);"]},"metadata":{},"sourceType":"module"}
{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","key","className","classes","Order","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,MAAQ,uB,yHCmCXC,EAhCD,SAAEC,GACZ,IAAMC,EAAc,GAEpB,IAAM,IAAIC,KAAkBF,EAAMC,YAC9BA,EAAYE,KACR,CACIC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAKtC,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACrC,OAAO,0BACHC,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEbC,IAAKP,EAAGJ,MAAOI,EAAGJ,KARf,KAQuBI,EAAGH,OAR1B,QAWX,OACI,yBAAKW,UAAWC,IAAQC,OACpB,2CAAiBZ,GACjB,qCAAU,uCAAaa,OAAOC,WAAYpB,EAAMqB,OAAQC,QAAS,O,gCCtBvEC,E,4LAEEC,KAAKxB,MAAMyB,cAAcD,KAAKxB,MAAM0B,MAAOF,KAAKxB,MAAM2B,U,+BAItD,IAAIC,EAAS,kBAACC,EAAA,EAAD,MASb,OARML,KAAKxB,MAAM8B,UACbF,EAASJ,KAAKxB,MAAM4B,OAAOrB,KAAK,SAAAR,GAAK,OACjC,kBAACmB,EAAD,CACIH,IAAKhB,EAAMgC,GACX9B,YAAaF,EAAME,YACnBoB,MAAOtB,EAAMsB,YAIrB,6BACKO,O,GAjBII,aAsCNC,uBAfS,SAAAC,GACpB,MAAO,CACHN,OAAQM,EAAMnC,MAAM6B,OACpBE,QAASI,EAAMnC,MAAM+B,QACrBJ,MAAOQ,EAAMC,KAAKT,MAClBC,OAAQO,EAAMC,KAAKR,WAIA,SAAAS,GACvB,MAAO,CACHX,cAAe,SAACC,EAAOC,GAAR,OAAmBS,EAAUC,IAAoBX,EAAOC,QAIhEM,CAAgDK,YAAkBf,EAAQgB","file":"static/js/5.57e73ef4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","import React from 'react';\n\nimport classes from './Order.module.css';\n\nconst order = ( props ) => {\n    const ingredients = [];\n\n    for ( let ingredientName in props.ingredients ) {\n        ingredients.push(\n            {\n                name: ingredientName,\n                amount: props.ingredients[ingredientName]\n            }\n        );\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span \n            style={{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px'\n                }}\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\n    });\n\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>USD {Number.parseFloat( props.price ).toFixed( 2 )}</strong></p>\n        </div>\n    );\n};\n\nexport default order;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Orders extends Component {\n    componentDidMount () {\n        this.props.onFetchOrders(this.props.token, this.props.userId);\n    }\n\n    render () {\n        let orders = <Spinner />;\n        if ( !this.props.loading ) {\n            orders = this.props.orders.map( order => (\n                <Order\n                    key={order.id}\n                    ingredients={order.ingredients}\n                    price={order.price} />\n            ) )\n        }\n        return (\n            <div>\n                {orders}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token, userId) => dispatch( actions.fetchOrders(token, userId) )\n    };\n};\n\nexport default connect( mapStateToProps, mapDispatchToProps )( withErrorHandler( Orders, axios ) );"],"sourceRoot":""}